name: Keep Alive
description: Action to keep the repository alive. If 55 days have passed since the last commit, it makes an empty push.

inputs:
  bypass:
    description: Force the action to run regardless of the last commit date.
    required: false
    default: false
  bot_token:
    description: GitHub token for the bot account.
    required: true

runs:
  using: composite
  steps:
    - name: Calculate days since last commit
      id: commit_date
      shell: bash
      run: |
        LAST_COMMIT_DATE=$(git log -1 --format=%ct)
        echo "Last commit date: $LAST_COMMIT_DATE"

        CURRENT_DATE=$(date +%s)
        echo "Current date: $CURRENT_DATE"

        # Calculate how many days have passed since the last commit
        DIFFERENCE=$(( ($CURRENT_DATE - $LAST_COMMIT_DATE) / 86400 ))
        echo "Days since last commit: $DIFFERENCE"

        echo "days_since_commit=$DIFFERENCE" >> $GITHUB_OUTPUT

    - name: Configure git user
      if: steps.commit_date.outputs.days_since_commit >= 55 || inputs.bypass == 'true'
      id: git_user
      shell: bash
      run: |
        # Set default values for git configuration
        # Use the official GitHub Actions bot account as default
        GIT_NAME="github-actions[bot]"
        # This email is GitHub's official noreply address for the github-actions bot
        GIT_EMAIL="41898282+github-actions[bot]@users.noreply.github.com"

        # Attempt to get the authenticated user's information from GitHub API
        GITHUB_USER=$(gh api user)

        # Try to use the authenticated user's login name if available (Fallback to github actor)
        if [ "$(echo "$GITHUB_USER" | jq -r '.login')" != "null" ]; then
          GIT_NAME=$(echo "$GITHUB_USER" | jq -r '.login')
        else
          GIT_NAME="$ACTOR"
        fi

        echo "Git user will be: $GIT_NAME <$GIT_EMAIL>"

        # Configure git with the determined user information
        git config --local user.name "$GIT_NAME"
        git config --local user.email "$GIT_EMAIL"

        echo "name=$GIT_NAME" >> $GITHUB_OUTPUT
      env:
        ACTOR: ${{ github.actor }}
        GH_TOKEN: ${{ inputs.bot_token }}

    - name: keep-alive
      if: steps.commit_date.outputs.days_since_commit >= 55 || inputs.bypass == 'true'
      shell: bash
      run: |
        git commit --allow-empty -m "Keeping the repository alive by $GIT_USER_NAME on $(date -u +'%Y-%m-%d')" || echo "No changes to commit"
        COMMIT_STATUS=$?

        # Check if the commit was created successfully
        if [ $COMMIT_STATUS -eq 0 ]; then
          echo "Commit created successfully, attempting to push..."
          git push
        else
          echo "Could not create commit. The repository might be inactive but cannot be kept alive through this method."
          echo "Make sure that the token has write permissions on the repository."
          exit 0
        fi
      env:
        GIT_USER_NAME: ${{ steps.git_user.outputs.name }}
