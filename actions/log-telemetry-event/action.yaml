name: "Log Telemetry Event"
description: "Append a telemetry event to the session file"

inputs:
  name:
    description: "Event name"
    required: true

  body:
    description: "(Optional) Event body/message plain text"
    required: false
    default: ""

  is_exception:
    description: "If 'true', logs this event as an exception instead of a custom event"
    required: false
    default: "false"

  span_phase:
    description: "(Optional) 'start' to mark span start, 'end' to mark span end"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Append event / span marker
      shell: bash
      env:
        INPUT_NAME: ${{inputs.name }}
        INPUT_BODY: ${{inputs.body}}
        INPUT_IS_EXCEPTION: ${{inputs.is_exception}}
        INPUT_SPAN_PHASE: ${{inputs.span_phase}}
      run: |
        if [ -z "$OTEL_EVENT_FILE" ]; then
          echo "OTEL_EVENT_FILE not set" >&2; exit 1;
        fi

        echo "is exception: $INPUT_IS_EXCEPTION"

        if [ "$INPUT_IS_EXCEPTION" = "true" ] || [ "$INPUT_IS_EXCEPTION" = "true" ]; then
          EXC=true
        else
          EXC=false
        fi

        NOW_ISO=$(date -u '+%Y-%m-%dT%H:%M:%S.%3NZ')

        if [ -n "$INPUT_NAME" ] && [ -n "$INPUT_SPAN_PHASE" ]; then
          # Validate phase
          if [ "$INPUT_SPAN_PHASE" = "start" ]; then
            echo "{\"span\":\"$INPUT_NAME\",\"startSpan\":\"$NOW_ISO\"}" >> "$OTEL_EVENT_FILE"
          elif [ "$INPUT_SPAN_PHASE" = "end" ]; then
            echo "{\"span\":\"$INPUT_NAME\",\"endSpan\":\"$NOW_ISO\"}" >> "$OTEL_EVENT_FILE"
          else
            echo "Unknown span_phase value '$INPUT_SPAN_PHASE' (expected 'start' or 'end'), writing as normal event" >&2
            echo "{\"name\":\"$INPUT_NAME\",\"body\":\"$INPUT_BODY\",\"exception\":$EXC}" >> "$OTEL_EVENT_FILE"
          fi
        else
          echo "{\"name\":\"$INPUT_NAME\",\"body\":\"$INPUT_BODY\",\"exception\":$EXC}" >> "$OTEL_EVENT_FILE"
        fi

        cat "$OTEL_EVENT_FILE"
