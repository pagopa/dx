on:
  workflow_call:
    inputs:
      workspace_name:
        description: The name of the workspace to create the artifact for.
        type: string
        required: true
      environment:
        description: Environment where the artifact will be deployed.
        type: string
        required: true
      resource_group_name:
        description: Web App resource group name.
        type: string
        required: true
      storage_account_name:
        description: Storage account name.
        type: string
        required: true
      profile_cdn_name:
        description: CDN Profile name.
        type: string
        required: true
      endpoint_name:
        description: CDN endpoint name.
        type: string
        required: true
      blob_container_name:
        description: Blob container name.
        type: string
        required: true
      selective_purge_paths:
        description: |
          If for the purge you want to include only new and/or modified files define a list of paths to be included in the artifact.
          E.g. '/path/file1' '/path/file2'
        type: string
        required: false
      use_private_agent:
        description: Use a private agent to deploy the built artifact.
        type: boolean
        required: false
        default: true

concurrency:
  group: ${{ github.workflow }}-cd
  cancel-in-progress: false

env:
  BUNDLE_NAME: bundle

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        name: Checkout
      
      - uses: ./.github/actions/code_build
        name: Build Code
        with:
          workspace_name: ${{ inputs.workspace_name }}
          base_workdir: '.'
          enable_turbo: 'false'
      
      - uses: ./.github/actions/artifact_definition
        name: Artifact Definition & Upload
        with:
          workspace_name: ${{ inputs.workspace_name }}
          base_workdir: '.'
          zip_artifact: 'false'
          bundle_name: ${{ env.BUNDLE_NAME }}

  deploy:
    name: Deploy
    if: ${{ !github.event.act }}
    environment: ${{ inputs.environment }}-cd
    needs: [build]
    runs-on: ${{ inputs.use_private_agent && 'self-hosted' || 'ubuntu-22.04' }}
    permissions:
      id-token: write
      contents: read
      actions: read
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        name: Checkout

      - name: Download Artifact
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4.1.1
        with:
          name: ${{ env.BUNDLE_NAME }}

      - name: Unzip Artifact
        run: |
          mkdir ./${{ env.BUNDLE_NAME }}
          unzip ${{ env.BUNDLE_NAME }}.zip -d ./${{ env.BUNDLE_NAME }}

      - name: Azure Login
        uses: azure/login@v2 # v2.0.0
        env:
          ARM_USE_OIDC: true
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}

      # - name: Sync Storage
      #   shell: bash
      #   run: |
      #     az storage blob sync \
      #       -c ${{ inputs.blob_container_name }} \
      #       --account-name ${{ inputs.storage_account_name }} \
      #       -s "./${{ env.BUNDLE_NAME }}"

      # - name: Purge CDN Specific Paths
      #   if: ${{ inputs.selective_purge_paths != '' }}
      #   shell: bash
      #   run: |
      #     az cdn endpoint purge \
      #       -g ${{ inputs.resource_group_name }} \
      #       -n ${{ inputs.endpoint_name }} \
      #       --profile-name ${{ inputs.profile_cdn_name }} \
      #       --content-paths $(echo "${{ inputs.selective_purge_paths }}" | sed -e "s/\([^ ]*\)/'\1'/g")

      # - name: Purge CDN
      #   if: ${{ inputs.selective_purge_paths == '' }}
      #   shell: bash
      #   run: |
      #     az cdn endpoint purge \
      #       -g ${{ inputs.resource_group_name }} \
      #       -n ${{ inputs.endpoint_name }} \
      #       --profile-name ${{ inputs.profile_cdn_name }} \
      #       --content-paths "/*"

      - name: Test Storage
        run: |
          echo "List of files in ."
          ls -la
          echo "List of files in ${{ env.BUNDLE_NAME }}"
          ls -la ${{ env.BUNDLE_NAME }}
          az storage blob list -c ${{ inputs.blob_container_name }} --account-name ${{ inputs.storage_account_name }}

      - name: Test CDN Specific Paths
        if: ${{ inputs.selective_purge_paths != '' }}
        run: |
          az cdn endpoint list -g ${{ inputs.resource_group_name }} --profile-name ${{ inputs.profile_cdn_name }}
          echo "${{ inputs.selective_purge_paths }}" | sed -e "s/\([^ ]*\)/'\1'/g" 

      - name: Test CDN
        if: ${{ inputs.selective_purge_paths == '' }}
        run: az cdn endpoint list -g ${{ inputs.resource_group_name }} --profile-name ${{ inputs.profile_cdn_name }}