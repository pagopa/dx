on:
  workflow_call:
    inputs:
      workspace_name:
        description: The name of the workspace to create the artifact for.
        type: string
        required: true
      environment:
        description: Environment where the artifact will be deployed.
        type: string
        required: true
      resource_group_name:
        description: Web App resource group name.
        type: string
        required: true
      web_app_name:
        description: Web App name.
        type: string
        required: true
      use_staging_slot:
        description: True if artifact should be deployed to staging slot
        type: boolean
        required: false
        default: true
      use_private_agent:
        description: Use a private agent to deploy the built artifact.
        type: boolean
        required: false
        default: true

concurrency:
  group: ${{ github.workflow }}-cd
  cancel-in-progress: true

env:
  BUNDLE_NAME: bundle

jobs:
  build:
    name: Build Artifact
    runs-on: ubuntu-latest
    env:
      WORKSPACE: ${{ inputs.workspace_name }}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        name: Checkout

  approver:
    name: Approve Next Step
    runs-on: ubuntu-latest
    needs: build
    permissions:
      actions: read
      contents: read
      deployments: write
    steps:

      - name: Approve Next Step
        run: |

          deployments=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID/pending_deployments)

          is_environment_matching=$(echo "$deployments" |
            jq --arg GH_ENV "$REQUIRED_ENVIRONMENT" '.[] | select(.environment.name == $GH_ENV)')

          if [ -z "$is_environment_matching" ]; then
            echo "::error::Environment $REQUIRED_ENVIRONMENT not found."
            echo "::warning::Check if the deployment was already approved by one of the reviewers."
            exit 1
          fi

          can_user_approve=$(echo "$deployments" |
            jq '.[] | select(.current_user_can_approve == true)')

          if [ -z "$can_user_approve" ]; then
            echo "::error::${{ github.actor }} is not a reviewer"
            echo "::warning::Auto Approval not available, the user is not a reviewer of the environment $REQUIRED_ENVIRONMENT."
            exit 1
          fi

          env_id=$(echo "$deployments" | jq -r '.[0].environment.id')

          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID/pending_deployments \
            -F "environment_ids[]=$env_id" \
            -f "state=approved" \
            -f "comment=Auto approve for staging slot"
        env:
          GH_TOKEN: ${{ secrets.GH_APPROVE }}
          REQUIRED_ENVIRONMENT: ${{ inputs.environment }}-cd

  deploy_staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ inputs.environment }}-cd
    steps:
      - name: Deploy to Staging
        run: |
          echo "Deploying to staging slot"

  deploy_prod:
    name: Deploy to Prod
    runs-on: ubuntu-latest
    needs: deploy_staging
    environment: ${{ inputs.environment }}-cd
    steps:
      - name: Deploy to Prod
        run: |
          echo "Deploying to Prod slot"
