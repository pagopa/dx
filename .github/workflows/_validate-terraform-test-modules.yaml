name: Test Terraform modules

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
    paths:
      - "infra/modules/**"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_USE_OIDC: true
  ARM_USE_AZUREAD: true
  ARM_STORAGE_USE_AZUREAD: true
  TF_IN_AUTOMATION: true

jobs:
  detect-modules:
    runs-on: ubuntu-latest
    name: Detect Modules to Test
    permissions:
      contents: read
    outputs:
      modules: ${{ steps.get-all-modules.outputs.resources || steps.get-modified-modules.outputs.resources }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Get all modules
        id: get-all-modules
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: pagopa/dx/.github/actions/get-all-resources@main

      - name: Get modified modules
        id: get-modified-modules
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: pagopa/dx/.github/actions/get-modified-resources@main

  # Fast tests for PR validation (Unit + Contract)
  terraform-unit-contract-tests:
    runs-on: ubuntu-latest
    needs: detect-modules
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Terraform Setup
        id: set-terraform-version
        uses: pagopa/dx/.github/actions/terraform-setup@main

      - name: Terraform Format Check
        working-directory: infra/modules/${{ matrix.module }}
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        working-directory: infra/modules/${{ matrix.module }}
        run: |
          terraform init -backend=false
          terraform validate

      - name: Terraform Unit Tests
        working-directory: infra/modules/${{ matrix.module }}
        run: |
          terraform init -input=false
          # Run unit tests (fast, no real resources)
          if [ -f "tests/unit.tftest.hcl" ]; then
            echo "Running unit tests..."
            terraform test -filter=tests/unit.tftest.hcl
          else
            echo "No unit tests found, skipping..."
          fi

      - name: Terraform Contract Tests
        working-directory: infra/modules/${{ matrix.module }}
        run: |
          # Run contract tests (validation tests)
          if [ -f "tests/contract.tftest.hcl" ]; then
            echo "Running contract tests..."
            terraform test -filter=tests/contract.tftest.hcl
          else
            echo "No contract tests found, skipping..."
          fi

  # Integration tests only on workflow_dispatch or specific conditions
  terraform-integration-tests:
    runs-on: ubuntu-latest
    needs: [detect-modules, terraform-unit-contract-tests]
    environment: infra-dev-ci
    permissions:
      id-token: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    # Only run integration tests on manual dispatch or when specifically requested
    if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'run-integration-tests') }}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Azure Login
        uses: pagopa/dx/.github/actions/azure-login@main

      - name: Terraform Setup
        id: set-terraform-version
        uses: pagopa/dx/.github/actions/terraform-setup@main

      - name: Terraform Init
        working-directory: infra/modules/${{ matrix.module }}
        run: terraform init -input=false

      - name: Terraform Integration Tests
        working-directory: infra/modules/${{ matrix.module }}
        run: |
          # Run integration tests (creates real resources)
          if [ -f "tests/integration.tftest.hcl" ]; then
            echo "Running integration tests..."
            terraform test -filter=tests/integration.tftest.hcl
          else
            echo "No integration tests found, running legacy tests..."
            terraform test
          fi
