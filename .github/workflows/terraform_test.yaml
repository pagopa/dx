name: Terraform Test

on:
  workflow_dispatch:
    inputs:
      module_to_test:
        description: |
          The module to test
          Example: 
            all --> Test all modules
            diff --> Test only the modules that have changes
            azure_api_management --> Test azure_api_management module
        type: choice
        required: true
        default: diff
        options:
          - all
          - diff
          - azure_api_management
          - azure_app_service
          - azure_app_service_exposed
          - azure_cosmos_account
          - azure_event_hub
          - azure_function_app
          - azure_function_app_exposed
          - azure_naming_convention
          - azure_postgres_server
          - azure_role_assignments
          - azure_storage_account

concurrency:
  group: tf-test-${{ github.head_ref }}
  cancel-in-progress: false

env:
  BASE_DIR: infra/modules/
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  tf_test:
    name: Terraform Test
    runs-on: ubuntu-20.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          # ref: ${{ github.sha }}

      # https://github.com/antonbabenko/pre-commit-terraform#github-actions
      # - name: Git config
      #   run: |
      #     set -eu

      #     git config --global --add safe.directory $GITHUB_WORKSPACE
      #     git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*

      - name: Azure Login
        uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2.2.0
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: Set Terraform Version
        id: set-terraform-version
        run: |
          set -eu
          terraform_version=$(cat .terraform-version)
          printf "terraform_version=$terraform_version" >> "$GITHUB_OUTPUT"

      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        name: Setup Terraform
        with:
          terraform_version: ${{ steps.set-terraform-version.outputs.terraform_version }}

      - name: Terraform Init
        working-directory: ${{ steps.directory.outputs.dir }}
        run: |
          terraform init

      - name: Run Terraform Test
        run: |
          # Found modified modules
          modified_modules=$(git diff --name-only main...CES-383-automatic-terraform-test | grep "^${{ env.BASE_DIR }}" | cut -d '/' -f 1-3 | sort -u)

          if [[ -z "$modified_modules" ]]; then
            echo "No modules have changes"
            exit 0
          fi

          # Use Terraform test on each module with changes
          for module in $modified_modules; do
            if [[ -d "$module/tests" ]]; then
              echo "Exec terraform test in: $module"
              cd "$module"
              terraform init
              # terraform test
            else
              echo "No tests found in: $module"
            fi
          done
