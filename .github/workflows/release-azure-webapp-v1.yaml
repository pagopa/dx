on:
  workflow_call:
    inputs:
      workspace_name:
        description: The name of the workspace to create the artifact for.
        type: string
        required: true

jobs:
  build:
    name: Build Artifact
    runs-on: ubuntu-latest

    env:
      WORKSPACE_NAME: ${{ inputs.workspace_name }}
      BUNDLE_NAME: bundle-${{ github.run_id }}

    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Node.js
        id: node-setup
        uses: pagopa/dx/.github/actions/node-setup@main

      - name: Install dependencies (pnpm)
        if: ${{ steps.node-setup.outputs.package-manager == 'pnpm' }}
        run: pnpm --filter $WORKSPACE_NAME install

      - name: Install dependencies (yarn)
        if: ${{ steps.node-setup.outputs.package-manager == 'yarn' }}
        run: yarn install --immutable

      - name: Build
        run: npx turbo build --filter $WORKSPACE_NAME

      - name: Get workspace path
        id: get-workspace-path
        run: |
          WORKSPACE_PATH=$(npx turbo ls --output=json | jq -sr '.[].packages.items[] | select(.name == "${{ env.WORKSPACE_NAME }}").path')
          echo "path=$WORKSPACE_PATH" >> $GITHUB_OUTPUT

      - name: Make artifact
        id: make-artifact
        env:
          YARN_NODE_LINKER: node-modules
          YARN_NM_HOISTING_LIMITS: workspaces
        working-directory: ${{ steps.get-workspace-path.outputs.path }}
        run: |
          if grep -rq --include='next.config.*' 'output: "standalone"' .; then
            echo "::debug:: the workspace contains a Next.js standalone app"
            mv .next/static .next/standalone/.next
            cd .next/standalone && zip -r $BUNDLE_NAME.zip .
            echo "artifact-path=$(realpath $BUNDLE_NAME.zip)" >> $GITHUB_OUTPUT
            exit 0
          fi

          if [ "${{ steps.node-setup.outputs.package-manager }}" == "pnpm" ]; then
            pnpm --filter $WORKSPACE_NAME deploy --prod bundle
            cd bundle && zip -r $BUNDLE_NAME.zip .
            echo "artifact-path=$(realpath $BUNDLE_NAME.zip)" >> $GITHUB_OUTPUT
            exit 0
          fi

          yarn config set nodeLinker node-modules
          yarn config set nmHoistingLimits workspaces
          yarn workspaces focus --production
          zip -r $BUNDLE_NAME.zip .
          echo "artifact-path=$(realpath $BUNDLE_NAME.zip)" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: pagopa/dx/.github/actions/upload-artifact@main
        with:
          file_path: ${{ steps.make-artifact.outputs.artifact-path }}
          bundle_name: artifact
