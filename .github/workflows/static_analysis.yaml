name: Static Analysis - TF Validation

on:
  workflow_call:
    inputs:
      terraform_version:
        description: Terraform version to use. If not set, it is automatically retrieved from .terraform-version file.
        type: string
        required: false
      pre_commit_tf_tag:
        description: |
          Pre-commit Terraform TAG to use,
          is release tag + package digest (Ref. Digest https://github.com/antonbabenko/pre-commit-terraform/pkgs/container/pre-commit-terraform)
          Example: vX.Y.Z@sha256:000...N
        type: string
        required: false
        default: "v1.94.1@sha256:638e8892cb2647240c175064254c2fda80214597275c81a360a878dc80323076"
      enable_modified_files_detection:
        description: If true, the pipeline will run pre-commit on modified files only.
        type: boolean
        required: false
        default: false
      check_to_run:
        description: If set, it runs only the specified pre-commit hook check. Otherwise, all checks are run.
        type: string
        required: false
      folder:
        description: If set, it runs the pre-commit on a single folder. Otherwise, it is run on all files.
        type: string
        required: false
      verbose:
        description: If enabled, it prints the verbose logging of pre-commit checks
        type: boolean
        required: false

concurrency:
  group: tf-static-analysis-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  get-versions:
    name: Get Terraform Version
    runs-on: ubuntu-latest
    outputs:
      terraform_version: ${{ steps.get-version.outputs.terraform_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.7

      - name: Get terraform version from .terraform-version file
        id: get-terraform-version
        uses: pagopa/dx/.github/actions/get-terraform-version@main
        with:
          default_version: "1.10.4"
      - name: Get terraform version from .terraform-version file
        id: get-pre-commit-version
        uses: pagopa/dx/.github/actions/get-pre-commit-version@main
        with:
          default_version: "1.96.2"

  tf_analysis:
    name: Terraform Validation
    runs-on: ubuntu-latest
    needs: [ get-versions ]
    env:
      TERRAFORM_VERSION: ${{ inputs.terraform_version || needs.get-versions.outputs.terraform_version }}
    container:
      image: ghcr.io/antonbabenko/pre-commit-terraform:${{ inputs.pre_commit_tf_tag || needs.get-versions.outputs.pre_commit_terraform_version }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}

      - name: Git config
        run: |
          set -eu

          git config --global --add safe.directory $GITHUB_WORKSPACE
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*

      - name: Fix Alpine Container Image
        run: |
          apk --no-cache add tar
          python -m pip freeze --local
        
      - name: Run pre-commit on specific folders
        if: ${{ inputs.folder != '' }}
        id: pre_commit_specific_folders
        env: 
          PRE_COMMIT_VERBOSE: ${{ inputs.verbose && '1' || '0' }}
        run: |
          set -eu

          echo "Start pre-commit on specific folder ${{ inputs.folder }}"

          find "${{ inputs.folder }}" -type f | xargs pre-commit run \
            --color=always \
            ${{ inputs.check_to_run }} \
            --files

      - name: Run pre-commit on Modified Files
        if: ${{ inputs.folder == '' && github.event_name == 'pull_request' && inputs.enable_modified_files_detection }}
        id: pre_commit_modified_files
        env:
          PRE_COMMIT_VERBOSE: ${{ inputs.verbose && '1' || '0' }}
        run: |
          set -eu

          echo "Start pre-commit only on modified files"
          echo "- FROM  Base ref: origin/${{ github.event.pull_request.base.ref }}"
          echo "- TO    Head ref: origin/${{ github.event.pull_request.head.ref }}"

          pre-commit run \
            --color=always \
            --show-diff-on-failure \
            --from-ref origin/${{ github.event.pull_request.base.ref }} \
            --to-ref origin/${{ github.event.pull_request.head.ref }} \
            ${{ inputs.check_to_run }}

      - name: Run pre-commit
        if: ${{ inputs.folder == '' && (!github.event_name == 'pull_request' || !inputs.enable_modified_files_detection) }}
        id: pre_commit
        env:
          PRE_COMMIT_VERBOSE: ${{ inputs.verbose && '1' || '0' }}
        run: |
          set -eu

          echo "Start pre-commit on all files"

          pre-commit run \
            --color=always \
            --all-files \
            ${{ inputs.check_to_run }}