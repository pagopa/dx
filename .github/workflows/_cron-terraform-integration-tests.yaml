name: Terraform modules integration tests (weekly)

on:
  schedule:
    - cron: "0 3 * * 1" # Every Monday at 03:00 UTC
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

env:
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_USE_OIDC: true
  ARM_USE_AZUREAD: true
  ARM_STORAGE_USE_AZUREAD: true
  TF_IN_AUTOMATION: true

jobs:
  detect-modules:
    runs-on: [self-hosted]
    name: Detect Modules with Integration Tests
    permissions:
      contents: read
    outputs:
      modules: ${{ steps.get-modules.outputs.resources }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Get last successful run SHA
        id: last-success-sha
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0
        with:
          script: |
            const { owner, repo } = context.repo;
            // List workflow runs for this workflow file
            const runs = await github.rest.actions.listWorkflowRuns({
              owner,
              repo,
              workflow_id: '_cron-terraform-integration-tests.yaml',
              status: 'success',
              per_page: 1
            });
            const sha = runs.data.workflow_runs?.[0]?.head_sha || '';
            core.setOutput('sha', sha);
            core.info(`Last successful run head_sha: ${sha || '(none)'}`);

      - name: Get modules that have integration tests
        id: get-modules
        run: |
          set -euo pipefail
          ROOT="infra/modules"
          # Collect all modules that contain an integration.tftest.hcl file
          TEST_MODULES='[]'
          while IFS= read -r -d '' dir; do
            module="${dir#$ROOT/}"
            TEST_MODULES=$(jq -c --arg m "$module" 'if index($m) then . else . + [$m] end' <<< "$TEST_MODULES")
          done < <(find "$ROOT" -type f -name 'integration.tftest.hcl' -printf '%h\0')

          echo "Detected modules with integration tests: $TEST_MODULES"

          # Use SHA from previous successful workflow run if available (output from github-script step)
          PREV_SHA='${{ steps.last-success-sha.outputs.sha }}'

          if [[ -n "${PREV_SHA}" ]]; then
            echo "Last successful run commit: $PREV_SHA"
            # Compute changed top-level module folders under infra/modules since PREV_SHA
            CHANGED_MODULES='[]'
            while IFS= read -r path; do
              mod=$(awk -F/ '{print $3}' <<< "$path")
              [[ -n "$mod" ]] || continue
              CHANGED_MODULES=$(jq -c --arg m "$mod" 'if index($m) then . else . + [$m] end' <<< "$CHANGED_MODULES")
            done < <(git diff --name-only "$PREV_SHA"...HEAD | awk -F/ '($1=="infra" && $2=="modules" && $3!="")')

            echo "Changed modules since last success: $CHANGED_MODULES"

            # Intersect changed modules with those that have integration tests
            FINAL=$(jq -c --argjson changed "$CHANGED_MODULES" --argjson tests "$TEST_MODULES" '
              [ $changed[], $tests[] ] | group_by(.) | map(select(length==2)) | map(.[0])
            ')
            echo "Modules selected for integration tests: $FINAL"
          else
            echo "No previous successful run found. Selecting all modules with integration tests."
            FINAL=$TEST_MODULES
          fi

          # Output (must be a JSON array string)
          echo "resources=$FINAL" >> $GITHUB_OUTPUT

  terraform-integration-test:
    runs-on: ubuntu-latest
    needs: detect-modules
    environment: infra-dev-cd
    if: ${{ needs.detect-modules.outputs.modules != '[]' }}
    permissions:
      id-token: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0

      - name: Cloud Provider Login
        uses: pagopa/dx/actions/csp-login@main

      - name: Terraform Setup
        id: set-terraform-version
        uses: pagopa/dx/.github/actions/terraform-setup@main

      - name: Terraform Init
        working-directory: infra/modules/${{ matrix.module }}
        run: |
          terraform init -input=false

      - name: Terraform Test (integration)
        working-directory: infra/modules/${{ matrix.module }}
        run: |
          terraform test -filter='tests/integration.tftest.hcl'
