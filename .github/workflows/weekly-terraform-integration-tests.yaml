name: Weekly Terraform Module Integration Tests

on:
  # Run weekly on Sunday at 3 AM UTC
  schedule:
    - cron: '0 3 * * 0'
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      module_filter:
        description: 'Specific module to test (leave empty for all modules)'
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_USE_OIDC: true
  ARM_USE_AZUREAD: true
  ARM_STORAGE_USE_AZUREAD: true
  TF_IN_AUTOMATION: true

jobs:
  detect-modules:
    runs-on: ubuntu-latest
    name: Detect Modules for Integration Testing
    permissions:
      contents: read
    outputs:
      modules: ${{ steps.get-modules.outputs.modules }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get all modules or specific module
        id: get-modules
        run: |
          if [ -n "${{ github.event.inputs.module_filter }}" ]; then
            echo "modules=[\"${{ github.event.inputs.module_filter }}\"]" >> $GITHUB_OUTPUT
          else
            # Get all modules that have integration or e2e tests
            modules=$(find infra/modules -name "integration.tftest.hcl" -o -name "e2e.tftest.hcl" | \
              sed 's|infra/modules/||' | sed 's|/tests/.*||' | sort -u | \
              jq -R -s -c 'split("\n")[:-1]')
            echo "modules=$modules" >> $GITHUB_OUTPUT
          fi

  # Integration tests - create and destroy real resources
  terraform-integration-tests:
    runs-on: ubuntu-latest
    needs: detect-modules
    environment: infra-dev-ci
    permissions:
      id-token: write
      contents: read
      issues: write  # To create issues on test failures
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Azure Login
        uses: pagopa/dx/.github/actions/azure-login@main

      - name: Terraform Setup
        uses: pagopa/dx/.github/actions/terraform-setup@main

      - name: Terraform Init
        working-directory: infra/modules/${{ matrix.module }}
        run: terraform init -input=false

      - name: Run Integration Tests
        working-directory: infra/modules/${{ matrix.module }}
        continue-on-error: true
        id: integration-test
        run: |
          if [ -f "tests/integration.tftest.hcl" ]; then
            echo "Running integration tests for ${{ matrix.module }}..."
            terraform test -filter=tests/integration.tftest.hcl
          else
            echo "No integration tests found for ${{ matrix.module }}, skipping..."
            exit 0
          fi

      - name: Run End-to-End Tests
        working-directory: infra/modules/${{ matrix.module }}
        continue-on-error: true
        id: e2e-test
        run: |
          if [ -f "tests/e2e.tftest.hcl" ]; then
            echo "Running end-to-end tests for ${{ matrix.module }}..."
            terraform test -filter=tests/e2e.tftest.hcl
          else
            echo "No end-to-end tests found for ${{ matrix.module }}, skipping..."
            exit 0
          fi

      - name: Create Issue on Test Failure
        if: failure()
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const title = `Weekly Integration Test Failed: ${{ matrix.module }}`;
            const body = `
            ## Integration Test Failure
            
            **Module:** ${{ matrix.module }}
            **Workflow:** ${{ github.workflow }}
            **Run ID:** ${{ github.run_id }}
            **Date:** ${{ github.event.schedule || 'Manual trigger' }}
            
            ### Integration Test Status
            Status: ${{ steps.integration-test.outcome }}
            
            ### End-to-End Test Status  
            Status: ${{ steps.e2e-test.outcome }}
            
            ### Action Required
            Please investigate the test failures and fix any issues with the module.
            
            **View full logs:** [Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            // Check if issue already exists
            const existingIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['terraform-test-failure', 'module:${{ matrix.module }}'],
              state: 'open'
            });
            
            if (existingIssues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['terraform-test-failure', 'module:${{ matrix.module }}', 'weekly-test']
              });
            }

  # Generate test report
  generate-test-report:
    runs-on: ubuntu-latest
    needs: [detect-modules, terraform-integration-tests]
    if: always()
    permissions:
      contents: read
      issues: write
    steps:
      - name: Generate Test Summary
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const modules = ${{ needs.detect-modules.outputs.modules }};
            const results = ${{ toJSON(needs.terraform-integration-tests.result) }};
            
            let summary = `## Weekly Terraform Module Test Report\n\n`;
            summary += `**Date:** ${new Date().toISOString()}\n`;
            summary += `**Trigger:** ${{ github.event_name }}\n\n`;
            
            summary += `### Test Results\n\n`;
            summary += `| Module | Status |\n`;
            summary += `|--------|--------|\n`;
            
            if (Array.isArray(modules)) {
              modules.forEach(module => {
                const status = results === 'success' ? '✅ Passed' : 
                              results === 'failure' ? '❌ Failed' : 
                              '⚠️ Skipped';
                summary += `| ${module} | ${status} |\n`;
              });
            }
            
            summary += `\n**View full results:** [Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n`;
            
            // Post as workflow summary
            await core.summary
              .addRaw(summary)
              .write();
