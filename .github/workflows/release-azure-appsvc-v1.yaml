on:
  workflow_call:
    inputs:
      workspace_name:
        description: The name of the workspace to create the artifact for.
        type: string
        required: true
      resource_group_name:
        description: Web App resource group name.
        type: string
        required: true
      web_app_name:
        description: Web App name.
        type: string
        required: true
      environment:
        description: Environment where the artifact will be deployed.
        type: string
        required: true
      disable_auto_staging_deploy:
        description: Disable automatic deployments to the staging slot.
        type: boolean
        required: false
        default: false
      use_private_agent:
        description: Use a private agent to deploy the built artifact.
        type: boolean
        required: false
        default: true
      use_labels:
        description: Use labels to start the right environment's GitHub runner. If use_labels is true, also use_private_agent must be set to true
        type: boolean
        required: false
        default: false
      override_labels:
        description: Needed for special cases where the environment alone is not sufficient as a distinguishing label
        type: string
        required: false
        default: ""

concurrency:
  group: ${{ github.workflow }}-cd
  cancel-in-progress: true

env:
  BUNDLE_NAME: ${{ inputs.workspace_name }}
  RESOURCE_GROUP_NAME: ${{ inputs.resource_group_name }}
  ARM_USE_OIDC: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    env:
      WORKSPACE_NAME: ${{ inputs.workspace_name }}

    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Build Package
        id: build-package
        uses: pagopa/dx/.github/actions/build-workspace@main
        with:
          workspace_name: ${{ env.WORKSPACE_NAME }}

      - name: Make artifact
        id: make-artifact
        env:
          PACKAGE_MANAGER: ${{ steps.build-package.outputs.package-manager }}
        working-directory: ${{ steps.build-package.outputs.workspace-path }}
        run: |
          if grep -rq --include='next.config.*' 'output: "standalone"' .; then
            echo "::debug::The workspace contains a Next.js standalone app"
            mv .next/static .next/standalone/.next
            cd .next/standalone && zip -r $BUNDLE_NAME.zip .
            echo "artifact-path=$(realpath $BUNDLE_NAME.zip)" >> $GITHUB_OUTPUT
            exit 0
          fi

          if [ "$PACKAGE_MANAGER" = "pnpm" ]; then
            echo "::debug::The workspace uses pnpm"
            pnpm --filter $WORKSPACE_NAME deploy --prod bundle
            cd bundle && zip -r $BUNDLE_NAME.zip .
            echo "artifact-path=$(realpath $BUNDLE_NAME.zip)" >> $GITHUB_OUTPUT
            exit 0
          fi

          if [ "$PACKAGE_MANAGER" = "yarn" ]; then
            echo "::debug::The workspace uses yarn"
            yarn config set nodeLinker node-modules
            yarn config set nmHoistingLimits workspaces
            yarn workspaces focus --production
            zip -r $BUNDLE_NAME.zip .
            echo "artifact-path=$(realpath $BUNDLE_NAME.zip)" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "::error::Unsupported package manager: $PACKAGE_MANAGER"
          exit 1

      - name: Upload Artifact
        uses: pagopa/dx/.github/actions/upload-artifact@main
        with:
          file_path: ${{ steps.make-artifact.outputs.artifact-path }}
          bundle_name: ${{ env.BUNDLE_NAME }}

  parse_inputs:
    name: Parse inputs
    runs-on: ubuntu-latest

    env:
      WEB_APP_NAME: ${{ inputs.web_app_name }}

    outputs:
      web_app_names: ${{ steps.get_webapp_names.outputs.web_app_names }}

    steps:
      - name: Get Web App Names
        id: get_webapp_names
        run: |
          WEB_APP_NAMES=$(echo "$WEB_APP_NAME" | jq -Rsc 'split("\n") | map(select(. != ""))')
          echo "web_app_names=$WEB_APP_NAMES" >> $GITHUB_OUTPUT

  deploy:
    name: "Deploy"
    uses: pagopa/dx/.github/workflows/release-azure-appsvc-deploy-v1.yaml@feats/release-appsvc-multiple-instances
    secrets: inherit

    needs: ["build", "parse_inputs"]

    strategy:
      matrix:
        web_app_name: ${{ fromJson(needs.parse_inputs.outputs.web_app_names) }}

    with:
      bundle_name: ${{ inputs.workspace_name }}
      resource_group_name: ${{ inputs.resource_group_name }}
      web_app_name: ${{ matrix.web_app_name }}
      environment: ${{ inputs.environment }}
      disable_auto_staging_deploy: ${{ inputs.disable_auto_staging_deploy }}
      use_private_agent: ${{ inputs.use_private_agent }}
      use_labels: ${{ inputs.use_labels }}
      override_labels: ${{ inputs.override_labels }}
