name: Deploy MCP Server
description: |
  Automated workflow to build MCP Server Docker image and deploy it to
  AWS Lambda when changes are made or new tags are pushed

on:
  workflow_dispatch:
  push:
    tags:
      - "@pagopa/dx-mcpserver@*"

jobs:
  build-and-deploy:
    name: Build and Deploy MCP on AWS Lambda
    runs-on: ubuntu-latest
    environment: app-dev-ci # cd
    env:
      AWS_REGION: eu-central-1
      ROLE_ARN: ${{ secrets.ROLE_ARN }}
      LAMBDA_FUNCTION_NAME: dx-p-euc1-mcp-server-lambda-01
      IMAGE_NAME: dx/mcp-server
      IMAGE_TAG: ${{ github.sha }}
    permissions:
      contents: write
      packages: read
      actions: read
      id-token: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Cloud Login
        uses: pagopa/dx/actions/csp-login@main

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Build and Push to ECR
        id: push-ecr
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          ECR_IMAGE_URI="$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG"
          ECR_IMAGE_LATEST="$ECR_REGISTRY/$IMAGE_NAME:latest"

          echo "Building and pushing Docker image to ECR..."
          docker buildx build \
            --platform linux/arm64 \
            --file apps/mcpserver/Dockerfile \
            --tag $ECR_IMAGE_URI \
            --tag $ECR_IMAGE_LATEST \
            --cache-from type=gha,scope=mcp-server \
            --cache-to type=gha,mode=max,scope=mcp-server \
            --provenance=false \
            --metadata-file /tmp/build-metadata.json \
            .

          # Extract digest from metadata
          DIGEST=$(jq -r '."containerimage.digest"' /tmp/build-metadata.json)

          echo "image-uri=$ECR_IMAGE_URI" >> $GITHUB_OUTPUT
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT
          echo "✅ Image built and pushed to ECR: $ECR_IMAGE_URI"
          echo "✅ Image digest: $DIGEST"

      - name: Generate Artifact Attestation
        uses: actions/attest-build-provenance@db473fddc028af60658334401dc6fa3ffd8669fd # v2.3.0
        with:
          subject-name: ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push-ecr.outputs.digest }}
          push-to-registry: false

      - name: Deploy Lambda
        uses: aws-actions/aws-lambda-deploy@29ea35c124579506cf0475e20df36198eb670d89 # v1.1.0
        with:
          function-name: ${{ env.LAMBDA_FUNCTION_NAME }}
          package-type: Image
          image-uri: ${{ steps.push-ecr.outputs.image-uri }}
