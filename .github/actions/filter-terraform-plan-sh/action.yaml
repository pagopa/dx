name: 'Run and Filter Terraform Plan'
description: 'Execute `terraform plan` and filter sensitive information from the output.'

inputs:
  base-path:
    description: 'The directory where terraform plan will be executed. (Defaults to the root of the repository)'
    required: false
    default: '.'

outputs:
  filtered_plan:
    description: "The filtered output of the `terraform plan` command."
    value: ${{ steps.plan.outputs.filtered_plan }}
  exit_code:
    description: "The exit code from the `terraform plan` command. 0 = Success/No Changes, 1 = Error, 2 = Success/With Changes."
    value: ${{ steps.plan.outputs.exit_code }}

runs:
  using: "composite"
  steps:
    - name: Run Terraform Plan and Filter Output
      id: plan
      shell: bash
      run: |
        set +e

        filter_output() {
          sed -E \
            -e 's/("?hidden-link"?\s*[:=]\s*)".*?"/\1"[SENSITIVE_VALUE]"/I' \
            -e 's/("?APPINSIGHTS_INSTRUMENTATIONKEY"?\s*[:=]\s*)".*?"/\1"[SENSITIVE_VALUE]"/I'
            # --- ADD NEW SED RULES HERE ---
        }

        echo "--- Executing Plan in: $WORKING_DIRECTORY ---"
        cd "$WORKING_DIRECTORY"

        # Run terraform plan, capture its exit code
        terraform plan -no-color -input=false 2>&1 | filter_output | tee "$PLAN_FILE"
        PLAN_EXIT_CODE=${PIPESTATUS[0]}

        echo "--- Plan executed with exit code: $PLAN_EXIT_CODE ---"

        # Write outputs for GitHub Actions
        echo "exit_code=$PLAN_EXIT_CODE" >> $GITHUB_OUTPUT

        EOF_MARKER=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16)
        echo "filtered_plan<<$EOF_MARKER" >> $GITHUB_OUTPUT
        cat "$PLAN_FILE" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "$EOF_MARKER" >> $GITHUB_OUTPUT

        # Cleanup
        echo "--- Cleaning up temporary file ---"
        rm "$PLAN_FILE"
      env:
        WORKING_DIRECTORY: ${{ inputs.base-path }}
        GITHUB_ACTION_PATH: ${{ github.action_path }}
        PLAN_FILE: filtered_plan.txt
