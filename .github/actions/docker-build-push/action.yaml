name: Docker Build and Push
description: Build and optionally push a Docker image

inputs:
  dockerfile_path:
    required: false
    default: './Dockerfile'
    description: Dockerfile path
  dockerfile_context:
    required: false
    default: '.'
    description: Dockerfile build context
  docker_image_name:
    required: false
    default: ${{ github.repository }}
    description: Docker image name, defaults to repository name
  docker_image_description:
    required: true
    description: Image description set as image label
  docker_image_authors:
    required: false
    default: PagoPA
    description: Authors names set as image label
  build_args:
    description: List of build arguments to use for Dockerfile build, given in env=value format.
    required: false
  build_platforms:
    required: false
    default: linux/amd64
    description: Image runtime platform, supports multiple values
  push_to_registry:
    required: false
    default: true
    description: Push the image to the registry

runs:
  using: composite
  steps:

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

    - name: Log in to the Container registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      if: ${{ inputs.push_to_registry == 'true' }}
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ env.GITHUB_TOKEN }}

    - name: Docker Meta
      id: meta
      uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
      env:
        IMAGE_NAME: ${{ inputs.docker_image_name }}
        DESCRIPTION: "${{ inputs.docker_image_description }}"
        AUTHORS: ${{ inputs.docker_image_authors }}
        REPOSITORY: ${{ github.repository }}
      with:
        images: ghcr.io/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
          type=ref,event=branch
          type=sha
        labels: |
          org.opencontainers.image.title=${{ env.IMAGE_NAME }}
          org.opencontainers.image.description=${{ env.DESCRIPTION }}
          org.opencontainers.image.authors=${{ env.AUTHORS }}
          org.opencontainers.image.url=github.com/${{ env.REPOSITORY }}
          org.opencontainers.image.source=https://github.com/${{ env.IMAGE_NAME }}

    - name: ${{ inputs.push_to_registry == 'true' && 'Build and Push Image' || 'Build Image' }}
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      id: push_registry
      env:
        DOCKERFILE_CONTEXT: ${{ inputs.dockerfile_context }}
        DOCKERFILE_PATH: ${{ inputs.dockerfile_path }}
        BUILD_ARGS: ${{ inputs.build_args }}
        BUILD_PLATFORMS: ${{ inputs.build_platforms }}
        SOURCE_DATE_EPOCH: 0 # https://docs.docker.com/build/ci/github-actions/reproducible-builds/
      with:
        context: ${{ env.DOCKERFILE_CONTEXT }}
        file: ${{ env.DOCKERFILE_PATH }}
        push: ${{ inputs.push_to_registry }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.annotations }}
        cache-from: type=gha
        cache-to: type=gha,mode=min
        build-args: ${{ env.BUILD_ARGS }}
        platforms: ${{ env.BUILD_PLATFORMS }}
        provenance: false

    # Create an entry in github.com/org/repo/attestations
    # to verify the provenence of the image through
    # e.g. gh attestation verify oci://<img-uri> --owner org
    - name: Generate Artifact Attestation
      uses: actions/attest-build-provenance@db473fddc028af60658334401dc6fa3ffd8669fd # v2.3.0
      if: ${{ inputs.push_to_registry == 'true' }}
      env:
        IMAGE_NAME: ${{ inputs.docker_image_name }}
      with:
        subject-name: ghcr.io/${{ env.IMAGE_NAME }}
        subject-digest: ${{ steps.push_registry.outputs.digest }}
        push-to-registry: false
