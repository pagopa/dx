"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9367],{4718:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>a});var t=n(3309);const s={},o=t.createContext(s);function r(e){const i=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:i},e.children)}},4797:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"pipelines/keep-alive","title":"Keep Alive","description":"The Keep Alive action is a utility that prevents GitHub repositories from becoming inactive by creating an empty commit and pushing it to the repository. This is particularly useful for maintaining GitHub Actions with scheduled triggers, which GitHub automatically disables after 60 days of repository inactivity.","source":"@site/docs/pipelines/keep-alive.md","sourceDirName":"pipelines","slug":"/pipelines/keep-alive","permalink":"/dx/docs/pipelines/keep-alive","draft":false,"unlisted":false,"editUrl":"https://github.com/pagopa/dx/tree/main/website/docs/pipelines/keep-alive.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"Keep Alive repositories"},"sidebar":"tutorialSidebar","previous":{"title":"Detecting Drift in Infrastructure as Code","permalink":"/dx/docs/pipelines/drift-detection"},"next":{"title":"Code Review - Legacy","permalink":"/dx/docs/pipelines/legacy-code-review"}}');var s=n(3881),o=n(4718);const r={sidebar_position:1,sidebar_label:"Keep Alive repositories"},a="Keep Alive",l={},c=[{value:"How It Works",id:"how-it-works",level:2},{value:"Usage",id:"usage",level:2},{value:"Implementation Example",id:"implementation-example",level:3},{value:"Adapting This Workflow",id:"adapting-this-workflow",level:3}];function d(e){const i={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"keep-alive",children:"Keep Alive"})}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.a,{href:"https://github.com/pagopa/dx/tree/main/.github/actions/keep-alive",children:"Keep Alive action"})," is a utility that prevents GitHub repositories from becoming inactive by creating an empty commit and pushing it to the repository. This is particularly useful for maintaining GitHub Actions with scheduled triggers, which GitHub automatically disables after ",(0,s.jsx)(i.a,{href:"https://docs.github.com/en/actions/managing-workflow-runs-and-deployments/managing-workflow-runs/disabling-and-enabling-a-workflow",children:"60 days"})," of repository inactivity."]}),"\n",(0,s.jsx)(i.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,s.jsx)(i.p,{children:"The action performs these steps:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Checks out the repository"}),"\n",(0,s.jsxs)(i.li,{children:["Configures a local git user as ",(0,s.jsx)(i.em,{children:'"Keepalive"'})]}),"\n",(0,s.jsxs)(i.li,{children:["Creates an empty commit with the message ",(0,s.jsx)(i.em,{children:'"Keeping the repository alive"'})]}),"\n",(0,s.jsx)(i.li,{children:"Pushes the commit to the repository"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(i.p,{children:"The most effective way to implement the Keep Alive pattern is by creating a scheduled workflow that:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Runs on a regular schedule (e.g., daily)"}),"\n",(0,s.jsx)(i.li,{children:"Checks how much time has passed since the last commit"}),"\n",(0,s.jsxs)(i.li,{children:["Invoke the ",(0,s.jsx)(i.code,{children:"Keep Alive"})," action and creates an empty commit only when necessary (approaching the 60-day limit)"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"implementation-example",children:"Implementation Example"}),"\n",(0,s.jsx)(i.p,{children:"Here is a complete example of a Keep Alive workflow:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"name: Keep Alive\non:\n  workflow_dispatch:\n  schedule:\n    - cron: '0 0 * * *' # Run at 00:00 every day\n\njobs:\n  keep_alive:\n    runs-on: 'ubuntu-latest'\n    permissions:\n      contents: write\n      actions: write\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Calculate days since last commit\n        id: commit_date\n        run: |\n          # Calculate days since last activity\n          LAST_COMMIT_DATE=$(git log -1 --format=%ct)\n          CURRENT_DATE=$(date +%s)\n          DIFFERENCE=$(( ($CURRENT_DATE - $LAST_COMMIT_DATE) / 86400 ))\n          echo \"days_since_commit=$DIFFERENCE\" >> $GITHUB_ENV\n\n      # Use the Keep Alive action when needed\n      - name: Keep Alive\n        if: env.days_since_commit >= '55'\n        uses: pagopa/dx/.github/actions/keep-alive@main\n"})}),"\n",(0,s.jsx)(i.h3,{id:"adapting-this-workflow",children:"Adapting This Workflow"}),"\n",(0,s.jsx)(i.p,{children:"When implementing this pattern in your own repositories:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Adjust the threshold"})," - The 55-day threshold can be modified based on your specific needs"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Consider the schedule"})," - The daily check frequency can be adjusted"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Ensure proper permissions"}),":","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["The workflow requires ",(0,s.jsx)(i.code,{children:"contents: write"})," to push commits"]}),"\n",(0,s.jsxs)(i.li,{children:["Enable ",(0,s.jsx)(i.code,{children:"Read and Write permissions"})," for workflows inside repository settings"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);