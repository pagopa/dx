"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[202],{4718:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var s=i(3309);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}},9886:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"conventions/git/branch-name","title":"Branch Naming Conventions","description":"To maintain consistency and clarity in your team\'s Git workflow, you may want to","source":"@site/docs/conventions/git/branch-name.md","sourceDirName":"conventions/git","slug":"/conventions/git/branch-name","permalink":"/dx/docs/conventions/git/branch-name","draft":false,"unlisted":false,"editUrl":"https://github.com/pagopa/dx/tree/main/website/docs/conventions/git/branch-name.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_label":"Branch Name","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Git","permalink":"/dx/docs/conventions/git/"},"next":{"title":"Commit Message","permalink":"/dx/docs/conventions/git/commit-message"}}');var t=i(3881),o=i(4718);const r={sidebar_label:"Branch Name",sidebar_position:1},c="Branch Naming Conventions",a={},d=[{value:"Guidelines",id:"guidelines",level:2},{value:"Activity Types",id:"activity-types",level:2},{value:"Examples",id:"examples",level:2},{value:"Good Examples",id:"good-examples",level:3},{value:"Bad Examples",id:"bad-examples",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"branch-naming-conventions",children:"Branch Naming Conventions"})}),"\n",(0,t.jsxs)(n.p,{children:["To maintain consistency and clarity in your team's Git workflow, you may want to\nfollow the format ",(0,t.jsx)(n.code,{children:"<activity-type>/<activity-name>"})," to name a branch. The\nactivity name should be ",(0,t.jsx)(n.strong,{children:"short, meaningful, and in plural form where\napplicable"}),", similar to how you would name a folder containing multiple related\nfiles."]}),"\n",(0,t.jsx)(n.h2,{id:"guidelines",children:"Guidelines"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Keep branch names clean and focused"}),": do not include tracking system\nactivity IDs (e.g., Jira task IDs) in the branch name. Instead,\n",(0,t.jsx)(n.a,{href:"/dx/docs/conventions/pull-requests/format#description",children:"reference them in the PR description"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Use lowercase and hyphens (",(0,t.jsx)(n.code,{children:"-"}),")"]})," to separate words for readability."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Keep names concise but descriptive"}),", avoiding overly generic terms like\n",(0,t.jsx)(n.code,{children:"update"})," or ",(0,t.jsx)(n.code,{children:"fix"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"activity-types",children:"Activity Types"}),"\n",(0,t.jsx)(n.p,{children:"Use one of the following types to categorize the branch activity:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"feats"}),": for new features"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fixes"}),": for any fix"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"refactors"}),": for code refactoring and reducing technical debt"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"chores"}),": for system tasks that are not user-facing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"docs"}),": for documentation-related tasks"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["This categorization helps quickly identify the purpose of the branch and\nprovides context to the team. Additionally, it allows us to gain ",(0,t.jsx)(n.strong,{children:"insights into\nthe effort invested in different types of activities"})," and how they are\nintegrated into the development process."]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"good-examples",children:"Good Examples"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"feats/user-authentication"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"fixes/login-errors"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"refactors/update-react-in-ui-components-workspace"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"bad-examples",children:"Bad Examples"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CES-666-fix-that"})," ",(0,t.jsx)(n.em,{children:"(includes superfluous details)"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fix-bug"})," ",(0,t.jsx)(n.em,{children:"(too vague)"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"new-feature"})," ",(0,t.jsx)(n.em,{children:"(uncategorized)"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"update"})," ",(0,t.jsx)(n.em,{children:"(lacks scope)"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"v1.2.0-release"})," ",(0,t.jsx)(n.em,{children:"(versioning should be handled via tags)"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ui-redesign"})," ",(0,t.jsxs)(n.em,{children:["(should be ",(0,t.jsx)(n.code,{children:"refactors/ui-design"}),")"]})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"feats/authentication_page"})," ",(0,t.jsx)(n.em,{children:"(should use hyphens instead of underscores)"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);