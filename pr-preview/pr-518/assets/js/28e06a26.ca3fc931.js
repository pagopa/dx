"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2001],{4686:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"infrastructure/azure/peps-cross-subscription","title":"Connecting resources across Azure Subscription via Private Endpoints","description":"Overview","source":"@site/docs/infrastructure/azure/peps-cross-subscription.md","sourceDirName":"infrastructure/azure","slug":"/infrastructure/azure/peps-cross-subscription","permalink":"/dx/pr-preview/pr-518/docs/infrastructure/azure/peps-cross-subscription","draft":false,"unlisted":false,"editUrl":"https://github.com/pagopa/dx/tree/main/website/docs/infrastructure/azure/peps-cross-subscription.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Connecting Resources Across Azure Subscription via Private Endpoints"},"sidebar":"tutorialSidebar","previous":{"title":"Implementing Azure IAM Across Subscriptions using Terraform","permalink":"/dx/pr-preview/pr-518/docs/infrastructure/azure/iam-cross-subscription"},"next":{"title":"DX Policy Rules Catalog","permalink":"/dx/pr-preview/pr-518/docs/infrastructure/azure/policy-catalog/"}}');var i=r(3881),s=r(4718);const o={sidebar_label:"Connecting Resources Across Azure Subscription via Private Endpoints"},a="Connecting resources across Azure Subscription via Private Endpoints",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Step-by-Step Implementation",id:"step-by-step-implementation",level:2},{value:"Caller Team: Defines the Private Endpoint in the Terraform codebase",id:"caller-team-defines-the-private-endpoint-in-the-terraform-codebase",level:3},{value:"Target Team: Approves the Private Endpoint Request",id:"target-team-approves-the-private-endpoint-request",level:3},{value:"Via Azure Portal",id:"via-azure-portal",level:4},{value:"Via Azure CLI",id:"via-azure-cli",level:4}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"connecting-resources-across-azure-subscription-via-private-endpoints",children:"Connecting resources across Azure Subscription via Private Endpoints"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"This guide explains how to enable network connectivity between two Azure\nresources in different subscriptions using Azure Private Endpoints via\nTerraform."}),"\n",(0,i.jsx)(n.p,{children:"The diagram below is a high-level view of the architecture described in the next\nsections. The ultimate goal is to ensure a clear separation of concerns and\nresource ownership."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Private Endpoint Architecture",src:r(6761).A+""})}),"\n",(0,i.jsx)(n.p,{children:"In short:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Team B manages services in subscription B that need to connect to services in\nsubscription A."}),"\n",(0,i.jsx)(n.li,{children:"Team B, the caller, exclusively owns the Private Endpoint."}),"\n",(0,i.jsx)(n.li,{children:"The Private Endpoint Terraform code should be maintained in Team B's\nrepository."}),"\n",(0,i.jsx)(n.li,{children:"Team A must approve the connection request without further interaction between\nthe two teams."}),"\n",(0,i.jsx)(n.li,{children:"Each resource in subscription B requires its own Private Endpoint."}),"\n",(0,i.jsx)(n.li,{children:"Multiple applications from the same team should use the same Private Endpoint."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"step-by-step-implementation",children:"Step-by-Step Implementation"}),"\n",(0,i.jsx)(n.h3,{id:"caller-team-defines-the-private-endpoint-in-the-terraform-codebase",children:"Caller Team: Defines the Private Endpoint in the Terraform codebase"}),"\n",(0,i.jsx)(n.p,{children:"Add the following code in caller's repository to create a Private Endpoint:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'resource "azurerm_private_endpoint" "example" {\n  name                = "example-private-endpoint"\n  location            = "caller-resource-location"\n  resource_group_name = "caller-team-domain-rg"\n  subnet_id           = "caller-team-pep-subnet"\n\n  private_service_connection {\n    name                           = "example-private-endpoint"\n    private_connection_resource_id = "/subscriptions/<SUBSCRIPTION_A>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.DocumentDB/databaseAccounts/<COSMOSDB_ACCOUNT>"\n    is_manual_connection           = true\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["For resources within the same subscription, the ",(0,i.jsx)(n.code,{children:"is_manual_connection"})," property\nis typically set to ",(0,i.jsx)(n.code,{children:"false"})," to bypass the approval step, as the resource owner\nis usually the same."]}),"\n",(0,i.jsxs)(n.p,{children:["However, since the resources in this scenario are in different subscriptions,\nthe property must be set to ",(0,i.jsx)(n.code,{children:"true"})," to initiate the approval process."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"private_connection_resource_id"})," value is hardcoded in this example. To have\na reference via Terraform ",(0,i.jsx)(n.code,{children:"data"})," block instead, the users that will apply the\nTerraform configuration and the Managed Identities federated with the GitHub\nworkflows need to have the ",(0,i.jsx)(n.code,{children:"Reader"})," role on the target resource."]}),"\n",(0,i.jsx)(n.h3,{id:"target-team-approves-the-private-endpoint-request",children:"Target Team: Approves the Private Endpoint Request"}),"\n",(0,i.jsx)(n.p,{children:"Once the Terraform configuration is applied, a connection request is created in\nthe target subscription. The target team must approve the request in order to\nactivate the connection."}),"\n",(0,i.jsx)(n.p,{children:"There are two ways to approve a Private Endpoint connection."}),"\n",(0,i.jsx)(n.h4,{id:"via-azure-portal",children:"Via Azure Portal"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["In the Azure Portal, navigate to ",(0,i.jsx)(n.code,{children:"Private Link Center"})]}),"\n",(0,i.jsxs)(n.li,{children:["Select ",(0,i.jsx)(n.code,{children:"Pending Connections"})]}),"\n",(0,i.jsxs)(n.li,{children:["Locate the request and click ",(0,i.jsx)(n.code,{children:"Approve"})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"via-azure-cli",children:"Via Azure CLI"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'az network private-endpoint-connection approve \\\n  --resource-group <TARGET_RESOURCE_GROUP> \\\n  --name <PRIVATE_ENDPOINT_NAME> \\\n  --description "<DESCRIPTION>"\n'})}),"\n",(0,i.jsx)(n.p,{children:"::: info"}),"\n",(0,i.jsx)(n.p,{children:"It is recommended to add a meaningful description to the connection, indicating\nwho is trying to connect and why this connection is necessary to facilitate the\nintegration."}),"\n",(0,i.jsx)(n.p,{children:":::"})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},4718:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(3309);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},6761:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/architecture-6a72a635edd1f6f639a78252af156d3f.svg"}}]);