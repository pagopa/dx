"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7918],{4718:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var r=i(3309);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}},5814:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"infrastructure/contributing-to-dx-terraform-modules/index","title":"Contributing to DX Terraform Modules","description":"This guide walks through the process of creating, developing, and publishing","source":"@site/docs/infrastructure/contributing-to-dx-terraform-modules/index.md","sourceDirName":"infrastructure/contributing-to-dx-terraform-modules","slug":"/infrastructure/contributing-to-dx-terraform-modules/","permalink":"/dx/docs/infrastructure/contributing-to-dx-terraform-modules/","draft":false,"unlisted":false,"editUrl":"https://github.com/pagopa/dx/tree/main/website/docs/infrastructure/contributing-to-dx-terraform-modules/index.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_label":"Contributing to DX Terraform Modules","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Contributing to DX Azure Provider","permalink":"/dx/docs/infrastructure/contributing-to-dx-provider"},"next":{"title":"Documenting DX Terraform Modules","permalink":"/dx/docs/infrastructure/contributing-to-dx-terraform-modules/documenting-dx-terraform-modules"}}');var s=i(3881),t=i(4718);const o={sidebar_label:"Contributing to DX Terraform Modules",sidebar_position:4},l="Contributing to DX Terraform Modules",a={},d=[{value:"Module Development and Versioning",id:"module-development-and-versioning",level:2},{value:"Managing Changes with Changeset",id:"managing-changes-with-changeset",level:3},{value:"Publishing Process",id:"publishing-process",level:3},{value:"A brief introduction",id:"a-brief-introduction",level:3},{value:"How to publish a module",id:"how-to-publish-a-module",level:2},{value:"Initialize the module",id:"initialize-the-module",level:3},{value:"What the Initialization Script Does",id:"what-the-initialization-script-does",level:3},{value:"Adding the Module to the Terraform Registry",id:"adding-the-module-to-the-terraform-registry",level:3},{value:"Best Practices and Tips",id:"best-practices-and-tips",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"contributing-to-dx-terraform-modules",children:"Contributing to DX Terraform Modules"})}),"\n",(0,s.jsxs)(n.p,{children:["This guide walks through the process of creating, developing, and publishing\nTerraform modules from the ",(0,s.jsx)(n.a,{href:"https://github.com/pagopa/dx",children:"DX monorepo"})," to the\nTerraform Registry."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"This documentation is intended for contributors working on DevEx Terraform\nmodules."})}),"\n",(0,s.jsxs)(n.p,{children:["The Terraform Registry serves as a central repository where organizations can\npublish and share their Terraform modules with the community. It provides a\nstandardized way to discover, distribute, and version infrastructure as code\ncomponents. Our organization maintains a collection of modules in the PagoPA\nnamespace, which you can find\n",(0,s.jsx)(n.a,{href:"https://registry.terraform.io/namespaces/pagopa-dx",children:"here"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"We'll cover the entire lifecycle from initialization to publication, including\nour versioning system and automated workflows."}),"\n",(0,s.jsxs)(n.p,{children:["Our Terraform modules are organized in the ",(0,s.jsx)(n.code,{children:"infra/modules"})," directory, with each\nmodule containing its own code, tests, and examples."]}),"\n",(0,s.jsx)(n.h2,{id:"module-development-and-versioning",children:"Module Development and Versioning"}),"\n",(0,s.jsxs)(n.p,{children:["We use ",(0,s.jsx)(n.a,{href:"https://github.com/changesets/changesets",children:"Changeset"})," for version\nmanagement and changelog generation. This helps maintain a clear history of\nchanges and ensures proper ",(0,s.jsx)(n.a,{href:"https://semver.org/",children:"semantic versioning"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"managing-changes-with-changeset",children:"Managing Changes with Changeset"}),"\n",(0,s.jsx)(n.p,{children:"Before starting development:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Initialize and install dependencies:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"yarn install\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"After making changes, create a changeset:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"yarn changeset\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This will prompt you to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Select the type of change (major/minor/patch)"}),"\n",(0,s.jsx)(n.li,{children:"Provide a description of your changes"}),"\n",(0,s.jsx)(n.li,{children:"Review and confirm"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"publishing-process",children:"Publishing Process"}),"\n",(0,s.jsx)(n.p,{children:"When you're ready to publish your changes:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"The Changeset release action will automatically create a pull request"}),"\n",(0,s.jsxs)(n.li,{children:["Review and merge the pull request to trigger:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Version bumping"}),"\n",(0,s.jsx)(n.li,{children:"Changelog updates"}),"\n",(0,s.jsx)(n.li,{children:"Code publication to the module sub-repository"}),"\n",(0,s.jsx)(n.li,{children:"Tag creation"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"a-brief-introduction",children:"A brief introduction"}),"\n",(0,s.jsx)(n.p,{children:"The Terraform Registry has specific requirements about repository structure -\neach module must live in its own repository with a standardized naming\nconvention. To accommodate this while maintaining the benefits of a monorepo\ndevelopment workflow, we've implemented an automated system that:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Takes the code from our monorepo's ",(0,s.jsx)(n.code,{children:"infra/modules"})," directory"]}),"\n",(0,s.jsxs)(n.li,{children:["Pushes each module to its dedicated sub-repository, following the Terraform\nRegistry naming convention:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Repository name format: ",(0,s.jsx)(n.code,{children:"terraform-<PROVIDER>-<NAME>"})]}),"\n",(0,s.jsxs)(n.li,{children:["Example: ",(0,s.jsx)(n.code,{children:"terraform-azurerm-azure-api-management"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["This process is handled by the\n",(0,s.jsx)(n.a,{href:"https://github.com/pagopa/dx/blob/main/.github/workflows/_release-bash-modules-to-subrepo.yaml",children:(0,s.jsx)(n.code,{children:"Push modules to subrepo"})}),"\nGitHub Action, which:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Identifies modified modules in the monorepo"}),"\n",(0,s.jsx)(n.li,{children:"Updates their respective sub-repositories with the latest code"}),"\n",(0,s.jsx)(n.li,{children:"Ensures version tags are properly synchronized"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"For example, if you have three modules in your monorepo:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"infra/modules/\n  \u251c\u2500\u2500 azure_api_management/\n  \u251c\u2500\u2500 azure_container_app/\n  \u2514\u2500\u2500 azure_cosmos_db/\n"})}),"\n",(0,s.jsx)(n.p,{children:"They will be automatically pushed to separate repositories:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"terraform-azurerm-azure-api-management"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"terraform-azurerm-azure-container-app"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"terraform-azurerm-azure-cosmos-db"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Each sub-repository maintains its own version history and tags, making it\ncompatible with the Terraform Registry while allowing us to keep our centralized\ndevelopment workflow in the monorepo."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Monorepo splitting strategy",src:i(7521).A+""})}),"\n",(0,s.jsx)(n.p,{children:"This approach gives us the best of both worlds:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Centralized development and code review in our monorepo"}),"\n",(0,s.jsx)(n.li,{children:"Compliance with Terraform Registry requirements"}),"\n",(0,s.jsx)(n.li,{children:"Automated version management and changelog generation"}),"\n",(0,s.jsx)(n.li,{children:"Clean, separate version histories for each module"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"how-to-publish-a-module",children:"How to publish a module"}),"\n",(0,s.jsx)(n.h3,{id:"initialize-the-module",children:"Initialize the module"}),"\n",(0,s.jsxs)(n.p,{children:["To create a new module, we provide an automated initialization script called\n",(0,s.jsx)(n.code,{children:"add-module.sh"})," located in the ",(0,s.jsx)(n.code,{children:"infra/scripts"})," directory. This script handles\nall the necessary setup steps and ensures consistency across module creation."]}),"\n",(0,s.jsx)(n.p,{children:"The script must be executed in the root of the dx repository and accepts the\nfollowing parameters:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"./infra/scripts/add-module.sh --name <module-name> --description <brief-module-description> [--provider <provider>]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters explained:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--name"}),": Required. The name of your module (e.g., ",(0,s.jsx)(n.code,{children:"azure_api_management"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--description"}),": Required. A brief description of the module's objective\n(e.g.,\n",(0,s.jsx)(n.code,{children:"Deploys an Azure API Management service with monitoring and network configuration"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--provider"}),": Optional. Defaults to ",(0,s.jsx)(n.code,{children:"azurerm"}),". Specifies the cloud provider\n(e.g., ",(0,s.jsx)(n.code,{children:"aws"}),", ",(0,s.jsx)(n.code,{children:"azurerm"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"what-the-initialization-script-does",children:"What the Initialization Script Does"}),"\n",(0,s.jsx)(n.p,{children:"The script performs several important steps:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Validates if the module directory already exists to prevent accidental\noverwrites"}),"\n",(0,s.jsxs)(n.li,{children:["Creates the module directory structure under ",(0,s.jsx)(n.code,{children:"infra-modules/<provider_name>/"})]}),"\n",(0,s.jsxs)(n.li,{children:["Generates a ",(0,s.jsx)(n.code,{children:"package.json"})," file for version management"]}),"\n",(0,s.jsx)(n.li,{children:"Creates or updates (if already exists) a dedicated sub-repository with\nTerraform Registry compliant naming and description"}),"\n",(0,s.jsx)(n.li,{children:"Initializes the repository with the module's base code"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"After successful initialization, you'll need to:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Start developing you module"}),"\n",(0,s.jsx)(n.li,{children:"Create a changeset to produce the first release"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"adding-the-module-to-the-terraform-registry",children:"Adding the Module to the Terraform Registry"}),"\n",(0,s.jsx)(n.p,{children:"After completing all previous steps and ensuring that the module has been pushed\nto its sub-repository:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Ensure the Tag Exists"}),(0,s.jsx)(n.br,{}),"\n","Before proceeding, merge the changeset Pull Request titled ",(0,s.jsx)(n.strong,{children:'"Version\npackages"'})," into the main branch of the sub-repository."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["This step is essential because the Terraform Registry requires at least one\nversion tag (",(0,s.jsx)(n.code,{children:"X.Y.Z"}),") for the module to be listed and published."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Access the Terraform Registry"}),(0,s.jsx)(n.br,{}),"\n","Use the ",(0,s.jsx)(n.code,{children:"dx-pagopa-bot"})," to log in to\n",(0,s.jsx)(n.a,{href:"https://registry.terraform.io",children:"registry.terraform.io"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Add the Repository"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.strong,{children:"Publish"})," => ",(0,s.jsx)(n.strong,{children:"Module"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Select the ",(0,s.jsx)(n.strong,{children:"GitHub repository"})," corresponding to the module (e.g.,\n",(0,s.jsx)(n.code,{children:"terraform-azurerm-azure-api-management"}),")."]}),"\n",(0,s.jsx)(n.li,{children:"Confirm the repository settings."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Verify Publication"}),(0,s.jsx)(n.br,{}),"\n","Once added, the module will be scanned by the Terraform Registry. Ensure that\nthe module appears in the PagoPA namespace with the correct version and\ndocumentation."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices-and-tips",children:"Best Practices and Tips"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Always create a changeset for any meaningful code changes"}),"\n",(0,s.jsx)(n.li,{children:"Provide clear, descriptive changelog messages that help users understand the\nimpact of changes"}),"\n",(0,s.jsx)(n.li,{children:"Test your modules thoroughly before publishing"}),"\n",(0,s.jsx)(n.li,{children:"Keep module documentation up to date with any changes"}),"\n",(0,s.jsx)(n.li,{children:"Follow the established naming conventions for consistency"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"After successfully publishing your module:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Monitor the GitHub Actions workflow for successful completion"}),"\n",(0,s.jsx)(n.li,{children:"Verify the module's version is correctly listed in the Terraform Registry"}),"\n",(0,s.jsx)(n.li,{children:"Update any dependent infrastructure code to use the new version"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"For additional help or questions, reach out to the DevEx team."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},7521:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/push-to-subrepo-47da3105f6db8534d89d3b4830009d81.png"}}]);