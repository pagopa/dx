"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7475],{879:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/image-2-94dfc520cbae20ec4e74f520c0666751.png"},1438:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>p});var a=t(7715),r=t(3881),i=t(4718),o=t(6688),s=t(5106);const l={title:"DevEx Initiative: Transforming the Development Experience at PagoPA",description:"Transforming the Development Experience at PagoPA",slug:"devex-initiative-0.1-alpha",hide_table_of_contents:!1,date:"2024-09-01T10:00",toc_min_heading_level:2,toc_max_heading_level:2},c="DevEx Initiative: Transforming the Development Experience at PagoPA",d={authorsImageUrls:[]},p=[{value:"Why DevEx",id:"why-devex",level:2},{value:"What We Do",id:"what-we-do",level:2},{value:"How We&#39;re Organized",id:"how-were-organized",level:2},{value:"Where We Stand",id:"where-we-stand",level:2},{value:"Pilot Projects",id:"pilot-projects",level:2},{value:"Trial System",id:"trial-system",level:3},{value:"IO FIMS",id:"io-fims",level:3},{value:"IO communication",id:"io-communication",level:3},{value:"IO authentication",id:"io-authentication",level:3},{value:"IO services",id:"io-services",level:3},{value:"Current Benefits of DevEx",id:"current-benefits-of-devex",level:2},{value:"Setting Up GitHub Repository Permissions on Azure",id:"setting-up-github-repository-permissions-on-azure",level:3},{value:"Setting Up Autoscaling for an App Service or Function App",id:"setting-up-autoscaling-for-an-app-service-or-function-app",level:3},{value:"Deploying an Azure Function App",id:"deploying-an-azure-function-app",level:3},{value:"Assigning Permissions to Azure Services",id:"assigning-permissions-to-azure-services",level:3},{value:"I&#39;m sold! How Can I Get Involved?",id:"im-sold-how-can-i-get-involved",level:2},{value:"Looking Ahead",id:"looking-ahead",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Imagine being able to release the first API for a ",(0,r.jsx)(n.strong,{children:"new"})," digital service into\nproduction in minutes instead of weeks, having fewer decisions to make, less\ncode to interpret and maintain, onboarding new team members with zero downtime:\nthis is the goal we set for ourselves with the ",(0,r.jsxs)(n.strong,{children:["Developer Experience\n(",(0,r.jsx)(n.a,{href:"https://pagopa.atlassian.net/wiki/spaces/ENG/pages/861732865/DevEx+Lab+-+Initiative+canvas",children:"DevEx"}),")"]}),"\ninitiative."]}),"\n",(0,r.jsx)(n.p,{children:"At the heart of the Engineering Area, a group of Senior, Cloud, and Staff\nEngineers has decided to tackle the daily challenges that slow down our work.\nWe're here to break down barriers, simplify processes, and make software\ndevelopment smoother and more rewarding for everyone."}),"\n",(0,r.jsx)("div",{class:"container",children:(0,r.jsxs)("div",{class:"row",children:[(0,r.jsx)("div",{class:"col col--6",children:(0,r.jsx)("div",{class:"col-demo",children:(0,r.jsx)(n.img,{alt:"Without DX",src:t(7078).A+""})})}),(0,r.jsx)("div",{class:"col col--6",children:(0,r.jsx)("div",{class:"col-demo",children:(0,r.jsx)(n.img,{alt:"With DX",src:t(879).A+""})})})]})}),"\n","\n",(0,r.jsx)(n.h2,{id:"why-devex",children:"Why DevEx"}),"\n",(0,r.jsx)(n.p,{children:"How much time is lost before even writing a line of code? How many decisions\nneed to be made? And how long does it take for a new engineer to become truly\nproductive?"}),"\n",(0,r.jsx)(n.p,{children:"With DevEx, we want to answer these questions and solve the problems that hinder\nour daily work:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reduce downtime:"})," Every second spent configuring an environment or\ninterpreting old code is a second lost to innovation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lower cognitive load"}),": Less complexity means more room to create value,\nreducing errors, and speeding up time-to-market"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Speed up onboarding:"})," Every new developer should be able to contribute from\nday one."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"what-we-do",children:"What We Do"}),"\n",(0,r.jsxs)(n.p,{children:["As ",(0,r.jsx)(n.a,{href:"https://github.com/orgs/pagopa/teams/engineering-team-devex",children:"DevEx team"})," we\ndoesn't just identify problems and suggest solutions: we tackle them head-on,\ngetting our hands dirty."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Common patterns and golden paths:"})," We provide ",(0,r.jsx)(n.em,{children:"golden paths"})," so you don't\nhave to reinvent the wheel every time."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ready-to-use abstractions and tools:"})," We reduce boilerplate code so you can\nfocus on the code that matters."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimized development environments:"})," We share pre-configured and ready to\nuse ",(0,r.jsx)(n.em,{children:"templates"})," because infrastructure should never be an obstacle but a\nresource."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Centralized documentation:"})," You'll no longer have to search for an answer;\nit will always be at your fingertips."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"how-were-organized",children:"How We're Organized"}),"\n",(0,r.jsx)(n.p,{children:"Currently, the DevEx initiative is driven by engineers working asynchronously,\ncontributing alongside their primary responsibilities within their main\nprojects. It may not always be this way, but for now, it seems to be working!"}),"\n",(0,r.jsxs)(n.p,{children:["Every two weeks, we hold a review & demo session on Google Meet. This is a key\nmoment to review our goals\n(",(0,r.jsx)(n.a,{href:"https://pagopa.atlassian.net/wiki/spaces/DevEx/pages/962757129/OKR",children:"OKRs"}),") and\nshare our progress. Each member autonomously selects a task from the\n",(0,r.jsx)(n.a,{href:"https://pagopa.atlassian.net/jira/software/c/projects/DEVEX/boards/501/backlog",children:"Jira DevEx Board"}),"\nand carries it forward, collaborating with the rest of the team through Code\nReviews and RFCs."]}),"\n",(0,r.jsxs)(n.p,{children:["Staff Engineers, in particular, are expected to independently select priority\ntasks beyond the scope of the project (domain) they are already engaged in. This\napproach requires ",(0,r.jsx)(n.strong,{children:"collaboration from Product Managers"})," to ensure that\nactivities are aligned with strategic business objectives."]}),"\n",(0,r.jsxs)(n.p,{children:["Innovation doesn't stop at theory: we bring solutions directly into projects,\n",(0,r.jsx)(n.strong,{children:"proactively supporting stream-aligned teams"}),", and promoting the adoption of\nDX tools."]}),"\n",(0,r.jsx)(n.h2,{id:"where-we-stand",children:"Where We Stand"}),"\n",(0,r.jsxs)(n.p,{children:["We started with an idea and a\n",(0,r.jsx)(n.a,{href:"https://www.figma.com/board/7rmB4tXRQlzfStPuJh4vU2/Kick-Off?node-id=0-1&t=UZeTC0BhIFl9678h-0",children:"brainstorming session"}),",\nthen we got to work."]}),"\n",(0,r.jsx)(n.p,{children:"Between April and July 2024, we have..."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Identified\n",(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx/blob/main/decisions/0006-we-start-with-typescript-and-azure.md",children:"shared technologies and patterns"}),"\nto focus our initial efforts on, currently: Typescript, Terraform, Azure, and\nGitHub Actions."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Established some new practices such as:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://pagopa.github.io/dx/docs/conventions/azure-naming-convention",children:"naming conventions"}),"\nfor Azure resources"]}),"\n",(0,r.jsxs)(n.li,{children:["structure for\n",(0,r.jsx)(n.a,{href:"https://pagopa.github.io/dx/docs/conventions/npm-scripts",children:"npm tasks for Typescript projects"})]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://pagopa.github.io/dx/docs/conventions/infra-folder-structure",children:"HCL code structure for Terraform modules"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Implemented new Terraform modules for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx/tree/main/infra/modules/github_selfhosted_runner_on_container_app_jobs",children:"creating a GitHub Actions runner"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx/tree/main/infra/modules/azure_federated_identity_with_github",children:"setting up GitHub repository identity on Azure"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx/tree/main/infra/modules/azure_role_assignments",children:"easily creating roles and permissions for Azure services"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx/tree/main/infra/modules/azure_function_app",children:"creating an Azure Functions App"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx/tree/main/infra/modules/azure_app_service",children:"creating an Azure App Service"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx/tree/main/infra/modules/azure_app_service_plan_autoscaler",children:"setting up autoscaling for an App Service or Function App"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Developed GitHub Actions for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx/blob/main/.github/workflows/js_code_review.yaml",children:"conducting code reviews on Typescript codebases"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx/blob/main/.github/workflows/docker_image_build.yaml",children:"building Docker images"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx/blob/main/.github/workflows/infra_apply.yaml",children:"deploying Azure services via Terraform"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx/blob/main/.github/workflows/infra_plan.yaml",children:"planning infrastructure changes"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx/blob/main/.github/workflows/infra_drift_detection.yml",children:"notifying of drifts between IaC code and infrastructure"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx/blob/main/.github/workflows/web_app_deploy.yaml",children:"deploying to production Azure Function or App Service"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx/blob/main/.github/workflows/static_analysis.yaml",children:"linting Terraform code"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Set up\n",(0,r.jsx)(n.a,{href:"https://github.com/pagopa/dx-typescript",children:"basic configurations for Typescript tooling"}),":\neslint, yarn, turbo, changeset."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Shared the\n",(0,r.jsx)(n.a,{href:"https://pagopa.github.io/dx/docs/articles/benchmark-openapi-gen",children:"results of a benchmark on tools for generating clients from OpenAPI specifications"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Analyzed the state of the art for\n",(0,r.jsx)(n.a,{href:"https://pagopa.github.io/dx/docs/articles/azure-tracing",children:"distributed monitoring and log correlation on Azure"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["While it may seem like a lot of material, we recognize that without proper\ndocumentation and effective communication, our efforts might be overlooked.\nThat's why we've launched a\n",(0,r.jsx)(n.a,{href:"https://pagopa.github.io/dx/docs/",children:"dedicated website"})," to be populated with\ncontent and continuously updated as a reference for all engineers in the\norganization."]}),"\n",(0,r.jsxs)(n.p,{children:["And that's not all! We're also working to provide tools (",(0,r.jsx)(n.em,{children:"scaffolding"}),") that can\nautomate repetitive and redundant tasks."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"We want to reach a point where documentation becomes unnecessary!"})}),"\n",(0,r.jsx)(n.h2,{id:"pilot-projects",children:"Pilot Projects"}),"\n",(0,r.jsx)(n.p,{children:"Although still in its early stages, much of the tooling we\u2019ve developed has\nalready been successfully used in several real projects."}),"\n",(0,r.jsx)(n.p,{children:"Here are some examples!"}),"\n",(0,r.jsx)(n.h3,{id:"trial-system",children:"Trial System"}),"\n",(0,r.jsx)(n.p,{children:"The team that implemented the Trial System used DevEx tooling to create a\nplatform that allows any digital service to segment users and test new features\non a selected group (feature flags):"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/trial-system",children:"https://github.com/pagopa/trial-system"})}),"\n",(0,r.jsx)(n.h3,{id:"io-fims",children:"IO FIMS"}),"\n",(0,r.jsx)(n.p,{children:"IO FIMS is a project that manages Single Sign-On for IO users. The team used\nDevEx tooling to create a new service:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/io-fims",children:"https://github.com/pagopa/io-fims"})}),"\n",(0,r.jsx)(n.h3,{id:"io-communication",children:"IO communication"}),"\n",(0,r.jsx)(n.p,{children:"The team that implemented the messaging service for IO used DevEx tooling to\ncreate a new Typescript monorepo and manage the deployment of Azure Functions:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/io-messages",children:"https://github.com/pagopa/io-messages"})}),"\n",(0,r.jsx)(n.h3,{id:"io-authentication",children:"IO authentication"}),"\n",(0,r.jsx)(n.p,{children:"The team that implemented the user authentication service for IO used DevEx\ntooling to create a new Typescript monorepo and manage the deployment of Azure\nFunctions:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/pagopa/io-auth-n-identity-domain",children:"https://github.com/pagopa/io-auth-n-identity-domain"})}),"\n",(0,r.jsx)(n.h3,{id:"io-services",children:"IO services"}),"\n",(0,r.jsx)(n.p,{children:"The team that implemented the backoffice for organizations in IO used DevEx\ntooling to manage the deployment of infrastructure and Azure Functions:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/search?q=repo%3Apagopa%2Fio-services-cms+pagopa%2Fdx&type=code",children:"https://github.com/search?q=repo%3Apagopa%2Fio-services-cms+pagopa%2Fdx&type=code"})}),"\n",(0,r.jsx)(n.h2,{id:"current-benefits-of-devex",children:"Current Benefits of DevEx"}),"\n",(0,r.jsx)(n.p,{children:"Let's share some brief code snippets to show how DevEx tooling can make\nengineers' work easier and faster."}),"\n",(0,r.jsx)(n.h3,{id:"setting-up-github-repository-permissions-on-azure",children:"Setting Up GitHub Repository Permissions on Azure"}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(s.A,{value:"after",label:"With DX",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"> cd io-messages/infra/identity\n> find . -type f\n./prod/outputs.tf\n./prod/locals.tf\n./prod/main.tf\n./prod/README.md\n./prod/.terraform.lock.hcl\n> find . -type f | xargs wc -l | tail -n 1 | awk '{print $1}'\n160 # LoC\n"})})}),(0,r.jsx)(s.A,{value:"before",label:"Without DX",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"> cd io-services-cms/.identity\n> find . -type f\n.\n./github_repository.tf\n./99_locals.tf\n./main.tf\n./03_github_environment_ci.tf\n./01_data.tf\n./env/prod/backend.ini\n./env/prod/terraform.tfvars\n./env/prod/backend.tfvars\n./99_variables.tf\n./04_github_identity.tf\n./terraform.sh\n./03_github_environment_infra.tf\n./99_outputs.tf\n./03_github_repo_secrets.tf\n./.terraform.lock.hcl\n./03_github_environment_cd.tf\n./03_github_environment_opex.tf\n> find . -type f | xargs wc -l | tail -n 1 | awk '{print $1}'\n731 # LoC\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"setting-up-autoscaling-for-an-app-service-or-function-app",children:"Setting Up Autoscaling for an App Service or Function App"}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(s.A,{value:"after",label:"With DX",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'module "function_app_user_autoscaler" {\n  source = "github.com/pagopa/dx//infra/modules/azure_app_service_plan_autoscaler?ref=main"\n\n  resource_group_name = var.resource_group_name\n\n  target_service = {\n    function_app_name = module.function_app_user.function_app.function_app.name\n  }\n\n  scheduler = {\n    maximum = 30\n    normal_load = {\n      default = 5\n      minimum = 3\n    }\n  }\n\n  scale_metrics = {\n    cpu = {\n      upper_threshold = 50\n      increase_by = 2\n    }\n  }\n}\n'})})}),(0,r.jsx)(s.A,{value:"before",label:"Without DX",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'resource "azurerm_monitor_autoscale_setting" "cms_fn" {\n  name                = "${var.prefix}-${var.env_short}-${var.location_short}-${var.domain}-cms-func-as-01"\n  resource_group_name = module.cms_fn.function_app.resource_group_name\n  location            = var.location\n  target_resource_id  = module.cms_fn.function_app.plan.id\n\n  profile {\n    name = "default"\n\n    capacity {\n      default = local.cms.autoscale_settings.default\n      minimum = local.cms.autoscale_settings.min\n      maximum = local.cms.autoscale_settings.max\n    }\n\n    rule {\n      metric_trigger {\n        metric_name              = "Requests"\n        metric_resource_id       = module.cms_fn.function_app.function_app.id\n        metric_namespace         = "microsoft.web/sites"\n        time_grain               = "PT1M"\n        statistic                = "Average"\n        time_window              = "PT1M"\n        time_aggregation         = "Average"\n        operator                 = "GreaterThan"\n        threshold                = 3000\n        divide_by_instance_count = false\n      }\n\n      scale_action {\n        direction = "Increase"\n        type      = "ChangeCount"\n        value     = "2"\n        cooldown  = "PT1M"\n      }\n    }\n\n    rule {\n      metric_trigger {\n        metric_name              = "CpuPercentage"\n        metric_resource_id       = module.cms_fn.function_app.plan.id\n        metric_namespace         = "microsoft.web/serverfarms"\n        time_grain               = "PT1M"\n        statistic                = "Average"\n        time_window              = "PT5M"\n        time_aggregation         = "Average"\n        operator                 = "GreaterThan"\n        threshold                = 60\n        divide_by_instance_count = false\n      }\n\n      scale_action {\n        direction = "Increase"\n        type      = "ChangeCount"\n        value     = "2"\n        cooldown  = "PT5M"\n      }\n    }\n\n    rule {\n      metric_trigger {\n        metric_name        = "MemoryPercentage"\n        metric_resource_id = module.cms_fn.function_app.plan.id\n        metric_namespace   = "microsoft.web/serverfarms"\n        time_grain         = "PT1M"\n        statistic          = "Average"\n        time_window        = "PT5M"\n        time_aggregation   = "Average"\n        operator           = "GreaterThan"\n        threshold          = 80\n      }\n      scale_action {\n        direction = "Increase"\n        type      = "ChangeCount"\n        value     = "2"\n        cooldown  = "PT5M"\n      }\n    }\n\n    rule {\n      metric_trigger {\n        metric_name              = "Requests"\n        metric_resource_id       = module.cms_fn.function_app.function_app.id\n        metric_namespace         = "microsoft.web/sites"\n        time_grain               = "PT1M"\n        statistic                = "Average"\n        time_window              = "PT7M"\n        time_aggregation         = "Average"\n        operator                 = "LessThan"\n        threshold                = 2000\n        divide_by_instance_count = false\n      }\n\n      scale_action {\n        direction = "Decrease"\n        type      = "ChangeCount"\n        value     = "1"\n        cooldown  = "PT5M"\n      }\n    }\n\n    rule {\n      metric_trigger {\n        metric_name              = "CpuPercentage"\n        metric_resource_id       = module.cms_fn.function_app.plan.id\n        metric_namespace         = "microsoft.web/serverfarms"\n        time_grain               = "PT1M"\n        statistic                = "Average"\n        time_window              = "PT7M"\n        time_aggregation         = "Average"\n        operator                 = "LessThan"\n        threshold                30\n        divide_by instance_count = false\n      }\n\n      scale_action {\n        direction = "Decrease"\n        type      = "ChangeCount"\n        value     = "1"\n        cooldown  = "PT5M"\n      }\n    }\n\n    rule {\n      metric_trigger {\n        metric_name        = "MemoryPercentage"\n        metric_resource_id = module.cms_fn.function_app.plan.id\n        metric_namespace   = "microsoft.web/serverfarms"\n        time_grain         = "PT1M"\n        statistic          = "Average"\n        time_window        = "PT7M"\n        time_aggregation   = "Average"\n        operator           = "LessThan"\n        threshold          30\n      }\n      scale_action {\n        direction = "Decrease"\n        type      = "ChangeCount"\n        value     = "1"\n        cooldown  = "PT5M"\n      }\n    }\n  }\n}\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"deploying-an-azure-function-app",children:"Deploying an Azure Function App"}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(s.A,{value:"after",label:"With DX",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"name: Deploy (op-func)\n\non:\n  workflow_dispatch:\n\njobs:\n  op_func_deploy:\n    uses: pagopa/dx/.github/workflows/web_app_deploy.yaml@add-web-app-deploy-workflow\n    name: Deploy\n    secrets: inherit\n    with:\n      workspace_name: op-func\n      environment: app-prod\n      resource_group_name: io-p-weu-fims-rg-01\n      web_app_name: io-p-weu-fims-op-func-01\n      use_staging_slot: false\n      use_private_agent: true\n"})})}),(0,r.jsx)(s.A,{value:"before",label:"Without DX",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Azure DevOps pipeline to release a new version and deploy to production.\n\nvariables:\n  HEALTHCHECK_PATH: "api/info"\n\nparameters:\n  - name: "RELEASE_SEMVER"\n    displayName: "When packing a release, define the version bump to apply"\n    type: string\n    values:\n      - major\n      - minor\n      - patch\n    default: minor\n  # Map of production apps to deploy to, in the form\n  #   {logicName}:\n  #     appname: {name of the resource}\n  #     rg: {name of the resource group}\n  # Although it\'s a parameter, it\'s not intended to be edited at runtime.\n  # It\'s here because variables only handle scalar values\n  - name: "PRODUCTION_APPS"\n    displayName: ""\n    type: object\n    default:\n      servicesfn1:\n        appname: io-p-services-fn-1\n        rg: io-p-services-rg-1\n      servicesfn2:\n        appname: io-p-services-fn-2\n        rg: io-p-services-rg-2\n\n# Only manual activations are intended\ntrigger: none\npr: none\n\n# This pipeline has been implemented to be run on hosted agent\n\n pools based both\n# on \'windows\' and \'ubuntu\' virtual machine images and using the scripts defined\n# in the package.json file. Since we are deploying on Azure functions on Windows\n# runtime, the pipeline is currently configured to use a Windows hosted image for\n# the build and deploy.\npool:\n  vmImage: "ubuntu-latest"\n\nresources:\n  repositories:\n    - repository: pagopaCommons\n      type: github\n      name: pagopa/azure-pipeline-templates\n      ref: refs/tags/v18\n      endpoint: "io-azure-devops-github-ro"\n\nstages:\n  # Create a release\n  # Activated when ONE OF these are met:\n  # - is on branch master\n  # - is a tag in the form v{version}-RELEASE\n  - stage: Release\n    condition:\n      and( succeeded(), or( eq(variables[\'Build.SourceBranch\'],\n      \'refs/heads/master\'), and( startsWith(variables[\'Build.SourceBranch\'],\n      \'refs/tags\'), endsWith(variables[\'Build.SourceBranch\'], \'-RELEASE\') ) ) )\n    pool:\n      vmImage: "ubuntu-latest"\n    jobs:\n      - job: make_release\n        steps:\n          - ${{ if eq(variables[\'Build.SourceBranch\'], \'refs/heads/master\') }}:\n              - template: templates/node-job-setup/template.yaml@pagopaCommons\n                parameters:\n                  persistCredentials: true\n              - template: templates/node-github-release/template.yaml@pagopaCommons\n                parameters:\n                  semver: "${{ parameters.RELEASE_SEMVER }}"\n                  gitEmail: $(GIT_EMAIL)\n                  gitUsername: $(GIT_USERNAME)\n                  gitHubConnection: $(GITHUB_CONNECTION)\n\n          - ${{ if ne(variables[\'Build.SourceBranch\'], \'refs/heads/master\') }}:\n              - script: |\n                  echo "We assume this reference to be a valid release: $(Build.SourceBranch). Therefore, there is no need to bundle a new release."\n                displayName: "Skip release bundle"\n\n  # Prepare Artifact\n  - stage: Prepare_artifact\n    dependsOn:\n      - Release\n    jobs:\n      - job: "prepare_artifact"\n        steps:\n          # Build application\n          - template: templates/node-job-setup/template.yaml@pagopaCommons\n            parameters:\n              # On the assumption that this stage is executed only when Release stage is,\n              #  with this parameter we set the reference the deploy script must pull changes from.\n              # The branch/tag name is calculated from the source branch\n              #  ex: Build.SourceBranch=refs/heads/master --\x3e master\n              #  ex: Build.SourceBranch=refs/tags/v1.2.3-RELEASE --\x3e v1.2.3-RELEASE\n              gitReference:\n                ${{ replace(replace(variables[\'Build.SourceBranch\'],\n                \'refs/tags/\', \'\'), \'refs/heads/\', \'\') }}\n          - script: |\n              yarn predeploy\n            displayName: "Build"\n\n          # Install functions extensions\n          - task: DotNetCoreCLI@2\n            inputs:\n              command: "build"\n              arguments: "-o bin"\n          # Copy application to\n          - task: CopyFiles@2\n            inputs:\n              SourceFolder: "$(System.DefaultWorkingDirectory)"\n              TargetFolder: "$(System.DefaultWorkingDirectory)/bundle"\n              Contents: |\n                **/*\n                !.git/**/*\n                !**/*.js.map\n                !**/*.ts\n                !.vscode/**/*\n                !.devops/**/*\n                !.prettierrc\n                !.gitignore\n                !README.md\n                !jest.config.js\n                !local.settings.json\n                !test\n                !tsconfig.json\n                !tslint.json\n                !yarn.lock\n                !Dangerfile.js\n                !CODEOWNERS\n                !__*/**/*\n            displayName: "Copy deploy files"\n\n          - publish: $(System.DefaultWorkingDirectory)/bundle\n            artifact: Bundle\n\n  # Deploy on staging slot\n  - ${{ each app in parameters.PRODUCTION_APPS }}:\n      - stage: Deploy_${{ app.Key }}_to_staging\n        dependsOn:\n          - Prepare_artifact\n        jobs:\n          - job: "do_deploy_${{ app.Key }}"\n            steps:\n              - checkout: none\n              - download: current\n                artifact: Bundle\n\n              - task: AzureFunctionApp@1\n                inputs:\n                  azureSubscription: "$(PRODUCTION_AZURE_SUBSCRIPTION)"\n                  resourceGroupName: "${{ app.Value.rg }}"\n                  appType: "functionApp"\n                  appName: "${{ app.Value.appname }}"\n                  package: "$(Pipeline.Workspace)/Bundle"\n                  deploymentMethod: "auto"\n                  deployToSlotOrASE: true\n                  slotName: "staging"\n                displayName: Deploy to staging slot\n\n  # Check that the staging instance is healthy\n  - ${{ each app in parameters.PRODUCTION_APPS }}:\n      - stage: Healthcheck_${{ app.Key }}\n        dependsOn:\n          - Deploy_${{ app.Key }}_to_staging\n        pool:\n          name: $(AGENT_POOL)\n        jobs:\n          - job: "do_healthcheck_${{ app.Key }}"\n            steps:\n              - checkout: none\n              - script: |\n                  # fails if response status is not 2xx\n                  curl -f \'https://${{ app.Value.appname }}-staging.azurewebsites.net/$(HEALTHCHECK_PATH)\'\n                displayName: "Healthcheck"\n\n  # Promote the staging instance to production\n  - ${{ each app in parameters.PRODUCTION_APPS }}:\n      - stage: Swap_${{ app.Key }}_to_production\n        dependsOn:\n          - Deploy_${{ app.Key }}_to_staging\n          # Wait for every healthcheck to succeed\n          # This implied that no app is swapped to prod if at least one healthcheck fails\n          - ${{ each appInner in parameters.PRODUCTION_APPS }}:\n              - Healthcheck_${{ appInner.Key }}\n        jobs:\n          - job: "do_deploy_${{ app.Key }}"\n            steps:\n              - checkout: none\n              - task: AzureAppServiceManage@0\n                inputs:\n                  azureSubscription: "$(PRODUCTION_AZURE_SUBSCRIPTION)"\n                  resourceGroupName: "${{ app.Value.rg }}"\n                  webAppName: "${{ app.Value.appname }}"\n                  sourceSlot: staging\n                  swapWithProduction: true\n                displayName: Swap with production slot\n\n  # Publish client SDK to NPM\n  - stage: PublishClientSDKtoNPM\n    dependsOn: Release\n    pool:\n      vmImage: "ubuntu-latest"\n    jobs:\n      - job: publish_SDK\n        steps:\n          # Template for generating and deploying client SDK to NPM\n          - template: templates/client-sdk-publish/template.yaml@pagopaCommons\n            parameters:\n              openapiSpecPath: "openapi/index.yaml"\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"assigning-permissions-to-azure-services",children:"Assigning Permissions to Azure Services"}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(s.A,{value:"after",label:"With DX",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'module "rp_func_roles" {\n  source       = "github.com/pagopa/dx//infra/modules/azure_role_assignments?ref=main"\n  principal_id = module.relying_party_func.system_identity_principal\n\n  cosmos = [{\n    account_name = data.azurerm_cosmosdb_account.fims.name\n    resource_group_name = data.azurerm_cosmosdb_account.fims.resource_group_name\n    role = "writer"\n  }]\n\n  key_vault = [{\n    name = var.key_vault.name\n    resource_group_name = var.key_vault.resource_group_name\n    roles = { secrets = "reader" }\n  }]\n}\n'})})}),(0,r.jsx)(s.A,{value:"before",label:"Without DX",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hcl",children:'resource "azurerm_key_vault_access_policy" "relying_party_func_key_vault_access_policy" {\n  key_vault_id = var.key_vault.id\n  tenant_id    = data.azurerm_client_config.current.tenant_id\n  object_id    = module.relying_party_func.system_identity_principal\n  secret_permissions = ["Get"]\n  storage_permissions = []\n  certificate_permissions = []\n}\n\nresource "azurerm_cosmosdb_sql_role_assignment" "rp_func_sql_role" {\n  resource_group_name = data.azurerm_cosmosdb_account.fims.resource_group_name\n  account_name = data.azurerm_cosmosdb_account.fims.name\n  role_definition_id = "${data.azurerm_cosmosdb_account.fims.id}/sqlRoleDefinitions/00000000-0000-0000-0000-000000000002"\n  principal_id = module.relying_party_func.system_identity_principal\n  scope = data.azurerm_cosmosdb_account.fims.id\n}\n'})})})]}),"\n",(0,r.jsx)(n.h2,{id:"im-sold-how-can-i-get-involved",children:"I'm sold! How Can I Get Involved?"}),"\n",(0,r.jsxs)(n.p,{children:["If you want to adopt our tooling, contribute to the project, or simply learn\nmore, don't hesitate to contact us on Slack in the\n",(0,r.jsx)(n.a,{href:"https://pagopaspa.slack.com/archives/C06EK19JBMM",children:"#team_devex"})," channel."]}),"\n",(0,r.jsx)(n.p,{children:"We want to make your work simpler and more rewarding, and we want to support you\nas best as we can in these early stages of the initiative."}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"Our ultimate goal is to become unnecessary!"})}),"\n",(0,r.jsx)(n.h2,{id:"looking-ahead",children:"Looking Ahead"}),"\n",(0,r.jsxs)(n.p,{children:["In the medium term (by 2025), we aim to achieve the highest score on the\n",(0,r.jsx)(n.a,{href:"https://pagopa.atlassian.net/wiki/spaces/DevEx/pages/1181941934/Platform+engineering+maturity+model",children:"maturity score"}),"\nfor our tooling and to have 100% adoption by stream-aligned teams. Follow our\nprogress and activities on our\n",(0,r.jsx)(n.a,{href:"https://pagopa.atlassian.net/jira/software/c/projects/DEVEX/boards/501/backlog",children:"Jira Board"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"In the long term we plan to support more languages (JAVA), frameworks, and cloud\nproviders (AWS), and to create a community of developers who share our vision\nand values."}),"\n",(0,r.jsx)(n.p,{children:"Today, we are just at the beginning. With DevEx, we are redefining how we\ndevelop, collaborate, and innovate at PagoPA. Are you ready to join us on this\njourney?"})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},4718:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var a=t(3309);const r={},i=a.createContext(r);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:n},e.children)}},5106:(e,n,t)=>{t.d(n,{A:()=>o});t(3309);var a=t(4617);const r={tabItem:"tabItem_WfQ1"};var i=t(3881);function o(e){let{children:n,hidden:t,className:o}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,o),hidden:t,children:n})}},6688:(e,n,t)=>{t.d(n,{A:()=>j});var a=t(3309),r=t(4617),i=t(3620),o=t(7226),s=t(4613),l=t(2561),c=t(2926),d=t(3038);function p(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,o.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(i),(0,a.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace({...r.location,search:n.toString()})}),[i,r])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,i=u(e),[o,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:i}))),[c,p]=m({queryString:t,groupId:r}),[g,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,i]=(0,d.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:r}),v=(()=>{const e=c??g;return h({value:e,tabValues:i})?e:null})();(0,s.A)((()=>{v&&l(v)}),[v]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),f(e)}),[p,f,i]),tabValues:i}}var f=t(9079);const v={tabList:"tabList_qgU2",tabItem:"tabItem_nYn1"};var _=t(3881);function b(e){let{className:n,block:t,selectedValue:a,selectValue:o,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),r=s[t].value;r!==a&&(c(n),o(r))},p=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,_.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,_.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>{l.push(e)},onKeyDown:p,onClick:d,...i,className:(0,r.A)("tabs__item",v.tabItem,i?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:i}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,_.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function y(e){const n=g(e);return(0,_.jsxs)("div",{className:(0,r.A)("tabs-container",v.tabList),children:[(0,_.jsx)(b,{...n,...e}),(0,_.jsx)(x,{...n,...e})]})}function j(e){const n=(0,f.A)();return(0,_.jsx)(y,{...e,children:p(e.children)},String(n))}},7078:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/image-3-8e18730fd132cfd04045e27395e071b0.png"},7715:e=>{e.exports=JSON.parse('{"permalink":"/dx/pr-preview/pr-518/blog/devex-initiative-0.1-alpha","editUrl":"https://github.com/pagopa/dx/tree/main/website/blog/001-devex-initiative.mdx","source":"@site/blog/001-devex-initiative.mdx","title":"DevEx Initiative: Transforming the Development Experience at PagoPA","description":"Transforming the Development Experience at PagoPA","date":"2024-09-01T10:00:00.000Z","tags":[],"readingTime":12.545,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"DevEx Initiative: Transforming the Development Experience at PagoPA","description":"Transforming the Development Experience at PagoPA","slug":"devex-initiative-0.1-alpha","hide_table_of_contents":false,"date":"2024-09-01T10:00","toc_min_heading_level":2,"toc_max_heading_level":2},"unlisted":false,"prevItem":{"title":"Benchmark for Typescript Code Generators from OpenAPI","permalink":"/dx/pr-preview/pr-518/blog/typescript-openapi-generators-0.1-alpha"}}')}}]);