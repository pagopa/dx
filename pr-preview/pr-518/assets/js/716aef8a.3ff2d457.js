"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8688],{4718:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>a});var i=n(3309);const t={},o=i.createContext(t);function s(e){const r=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(o.Provider,{value:r},e.children)}},8293:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"infrastructure/contributing-to-dx-provider","title":"Contributing to DX Azure Provider","description":"We appreciate your interest in contributing to the DX Azure provider! This","source":"@site/docs/infrastructure/contributing-to-dx-provider.md","sourceDirName":"infrastructure","slug":"/infrastructure/contributing-to-dx-provider","permalink":"/dx/docs/infrastructure/contributing-to-dx-provider","draft":false,"unlisted":false,"editUrl":"https://github.com/pagopa/dx/tree/main/website/docs/infrastructure/contributing-to-dx-provider.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_label":"Contributing to DX Azure Provider","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Using DX Azure Terraform Provider","permalink":"/dx/docs/infrastructure/using-terraform-registry-provider"},"next":{"title":"Contributing to DX Terraform Modules","permalink":"/dx/docs/infrastructure/contributing-to-dx-terraform-modules/"}}');var t=n(3881),o=n(4718);const s={sidebar_label:"Contributing to DX Azure Provider",sidebar_position:4},a="Contributing to DX Azure Provider",d={},l=[{value:"Publishing and Releasing the Provider",id:"publishing-and-releasing-the-provider",level:2},{value:"Subrepository Push Workflow",id:"subrepository-push-workflow",level:3},{value:"Release Workflow",id:"release-workflow",level:3},{value:"Configuring the GPG Key",id:"configuring-the-gpg-key",level:3},{value:"Manual Release Steps",id:"manual-release-steps",level:3},{value:"Testing Local Changes",id:"testing-local-changes",level:2},{value:"Step 1: Clone the Subrepository",id:"step-1-clone-the-subrepository",level:3},{value:"Step 2: Build the Provider",id:"step-2-build-the-provider",level:3},{value:"Step 3: Configure <code>.terraformrc</code>",id:"step-3-configure-terraformrc",level:3},{value:"Step 4: Update Your Terraform Configuration",id:"step-4-update-your-terraform-configuration",level:3},{value:"Step 5: Test the Provider",id:"step-5-test-the-provider",level:3},{value:"Step 6: Run Acceptance Tests",id:"step-6-run-acceptance-tests",level:3},{value:"Troubleshooting Common Issues",id:"troubleshooting-common-issues",level:2},{value:"Invalid Resource Type",id:"invalid-resource-type",level:3},{value:"Build Issues",id:"build-issues",level:3},{value:"Pipeline Failures",id:"pipeline-failures",level:3},{value:"Useful Documentation",id:"useful-documentation",level:2}];function c(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"contributing-to-dx-azure-provider",children:"Contributing to DX Azure Provider"})}),"\n",(0,t.jsx)(r.p,{children:"We appreciate your interest in contributing to the DX Azure provider! This\ndocument provides guidelines for contributing to the provider, including\npublishing, testing, and troubleshooting."}),"\n",(0,t.jsx)(r.h2,{id:"publishing-and-releasing-the-provider",children:"Publishing and Releasing the Provider"}),"\n",(0,t.jsxs)(r.p,{children:["The DX Azure provider is maintained in the\n",(0,t.jsx)(r.a,{href:"https://github.com/pagopa/dx/tree/main/infra/provider",children:"DX GitHub Repository"}),"\nand is automatically pushed to its subrepository and released on the Terraform\nRegistry using GitHub Actions workflows."]}),"\n",(0,t.jsx)(r.h3,{id:"subrepository-push-workflow",children:"Subrepository Push Workflow"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"_release-bash-provider-to-subrepo.yaml"})," workflow ensures that changes to the\nprovider in the ",(0,t.jsx)(r.code,{children:"infra/provider"})," directory of the main repository (",(0,t.jsx)(r.code,{children:"dx"}),") are\npushed to its dedicated subrepository (e.g.,\n",(0,t.jsx)(r.a,{href:"https://github.com/pagopa-dx/terraform-provider-azure",children:"terraform-provider-azure"}),").\nThis workflow is triggered on changes to the ",(0,t.jsx)(r.code,{children:"main"})," branch."]}),"\n",(0,t.jsx)(r.h3,{id:"release-workflow",children:"Release Workflow"}),"\n",(0,t.jsxs)(r.p,{children:["The release workflow is located in the ",(0,t.jsx)(r.code,{children:"infra/provider/.github/workflows"}),"\ndirectory of the main repository (",(0,t.jsx)(r.code,{children:"dx"}),") and must be maintained there. It is\nexecuted in the subrepository of the provider after the changes are pushed. This\nworkflow automates the release process by creating a new release when a tag\nmatching the pattern ",(0,t.jsx)(r.code,{children:"v*"})," (e.g., ",(0,t.jsx)(r.code,{children:"v0.1.0"}),") is pushed. The release process\nincludes:"]}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsx)(r.li,{children:"Fetching the repository."}),"\n",(0,t.jsx)(r.li,{children:"Importing the GPG key for signing."}),"\n",(0,t.jsx)(r.li,{children:"Running GoReleaser to build and publish the provider."}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"configuring-the-gpg-key",children:"Configuring the GPG Key"}),"\n",(0,t.jsxs)(r.p,{children:["A GPG key is used to cryptographically sign the release, ensuring its\nauthenticity and integrity. The secrets required for this process\n(",(0,t.jsx)(r.code,{children:"GPG_PRIVATE_KEY"})," and ",(0,t.jsx)(r.code,{children:"PASSPHRASE"}),") must be configured in the subrepository\n(e.g.,\n",(0,t.jsx)(r.a,{href:"https://github.com/pagopa-dx/terraform-provider-azure",children:"terraform-provider-azure"}),")\nunder the repository settings."]}),"\n",(0,t.jsxs)(r.p,{children:["Additionally, the ",(0,t.jsx)(r.strong,{children:"public key"})," associated with the GPG key must be added to\nthe Terraform Registry account. This step is necessary to verify the\nauthenticity of the provider during publication."]}),"\n",(0,t.jsxs)(r.p,{children:["For more details, refer to the\n",(0,t.jsx)(r.a,{href:"https://developer.hashicorp.com/terraform/registry/providers/publishing#creating-a-github-release",children:"official Terraform documentation"}),"."]}),"\n",(0,t.jsx)(r.h3,{id:"manual-release-steps",children:"Manual Release Steps"}),"\n",(0,t.jsx)(r.p,{children:"If you need to manually trigger a release:"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["Create a new tag in the format ",(0,t.jsx)(r.code,{children:"vX.Y.Z"})," (e.g., ",(0,t.jsx)(r.code,{children:"v0.1.0"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Push the tag to the subrepository:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"git tag v0.1.0\ngit push origin v0.1.0\n"})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"The release workflow in the subrepository will automatically handle the rest."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"testing-local-changes",children:"Testing Local Changes"}),"\n",(0,t.jsx)(r.p,{children:"If you need to make changes to the DX Azure provider and test them locally,\nfollow these steps:"}),"\n",(0,t.jsx)(r.h3,{id:"step-1-clone-the-subrepository",children:"Step 1: Clone the Subrepository"}),"\n",(0,t.jsx)(r.p,{children:"Clone the subrepository for the DX Azure provider:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"git clone https://github.com/pagopa-dx/terraform-provider-azure.git\ncd terraform-provider-azure\n"})}),"\n",(0,t.jsx)(r.h3,{id:"step-2-build-the-provider",children:"Step 2: Build the Provider"}),"\n",(0,t.jsx)(r.p,{children:"Run the following commands in the main directory of the cloned repository to\ninstall dependencies, tidy up the module, and build the provider:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"go mod tidy\ngo build -o terraform-provider-azure\n"})}),"\n",(0,t.jsxs)(r.p,{children:["This will generate the ",(0,t.jsx)(r.code,{children:"terraform-provider-azure"})," binary in the current\ndirectory."]}),"\n",(0,t.jsxs)(r.h3,{id:"step-3-configure-terraformrc",children:["Step 3: Configure ",(0,t.jsx)(r.code,{children:".terraformrc"})]}),"\n",(0,t.jsxs)(r.p,{children:["To use the locally built provider, you need to override the default provider\ninstallation by adding an entry to your ",(0,t.jsx)(r.code,{children:".terraformrc"})," file. Create or update\nthe file in your home directory (",(0,t.jsx)(r.code,{children:"~/.terraformrc"}),") with the following content:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-hcl",children:'provider_installation {\n  dev_overrides {\n    "local-pagopa-dx/azure" = "/path/to/terraform-provider-azure"\n  }\n  direct {}\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["Replace ",(0,t.jsx)(r.code,{children:"/path/to/terraform-provider-azure"})," with the absolute path to the\ndirectory where you built the provider."]}),"\n",(0,t.jsx)(r.h3,{id:"step-4-update-your-terraform-configuration",children:"Step 4: Update Your Terraform Configuration"}),"\n",(0,t.jsxs)(r.p,{children:["In your Terraform configuration, update the ",(0,t.jsx)(r.code,{children:"source"})," field to match the override\nkey in ",(0,t.jsx)(r.code,{children:".terraformrc"}),":"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-hcl",children:'terraform {\n  required_providers {\n    dx = {\n      source  = "local-pagopa-dx/azure"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(r.h3,{id:"step-5-test-the-provider",children:"Step 5: Test the Provider"}),"\n",(0,t.jsxs)(r.p,{children:["Run ",(0,t.jsx)(r.code,{children:"terraform init"})," in your Terraform project directory to initialize the\nprovider. Terraform will use the locally built provider instead of downloading\nit from the registry."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"terraform init\nterraform plan\n"})}),"\n",(0,t.jsx)(r.p,{children:"You can now test your changes locally. Once you are satisfied with the results,\npush your changes to the subrepository and follow the release process described\nabove."}),"\n",(0,t.jsx)(r.h3,{id:"step-6-run-acceptance-tests",children:"Step 6: Run Acceptance Tests"}),"\n",(0,t.jsx)(r.p,{children:"To verify that your changes work correctly with the provider's acceptance tests,\nrun the following command from the main directory of the provider:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"make testacc\n"})}),"\n",(0,t.jsx)(r.p,{children:"This will execute all the Go acceptance tests, validating that your changes\nfunction properly in various scenarios. It's important to run these tests before\nsubmitting any changes to ensure compatibility and functionality."}),"\n",(0,t.jsx)(r.admonition,{type:"note",children:(0,t.jsxs)(r.p,{children:["Remember to remove or comment out the ",(0,t.jsx)(r.code,{children:".terraformrc"})," override and restore the\n",(0,t.jsx)(r.code,{children:"source"})," field in your Terraform configuration to the original value\n(",(0,t.jsx)(r.code,{children:"pagopa-dx/azure"}),") before deploying to production."]})}),"\n",(0,t.jsx)(r.h2,{id:"troubleshooting-common-issues",children:"Troubleshooting Common Issues"}),"\n",(0,t.jsx)(r.h3,{id:"invalid-resource-type",children:"Invalid Resource Type"}),"\n",(0,t.jsxs)(r.p,{children:["If the ",(0,t.jsx)(r.code,{children:"resource_name"})," function returns an error for an invalid resource type,\nrefer to the\n",(0,t.jsx)(r.a,{href:"https://registry.terraform.io/providers/pagopa-dx/azure/latest/docs/functions/resource_name#resource-types",children:"official list"}),"\nof supported resource types."]}),"\n",(0,t.jsx)(r.h3,{id:"build-issues",children:"Build Issues"}),"\n",(0,t.jsx)(r.p,{children:"If the provider build fails, try the following steps:"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["Before ",(0,t.jsx)(r.code,{children:"tidy"})," and ",(0,t.jsx)(r.code,{children:"build"}),", run the following command in the main directory of\nthe provider to ensure all dependencies are installed:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"go install .\n"})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"If the build still fails, ensure the binary is executable by running:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"chmod +x terraform-provider-azure\n"})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"If the issue persists, it might be related to your machine's architecture.\nUse the following command to specify the architecture and operating system\nfor the build:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"GOARCH=arm64 GOOS=darwin go build -o terraform-provider-azure\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Adjust ",(0,t.jsx)(r.code,{children:"GOARCH"})," and ",(0,t.jsx)(r.code,{children:"GOOS"})," based on your machine's architecture and operating\nsystem. For example:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["For macOS with an ARM64 processor: ",(0,t.jsx)(r.code,{children:"GOARCH=arm64 GOOS=darwin"})]}),"\n",(0,t.jsxs)(r.li,{children:["For Linux with an AMD64 processor: ",(0,t.jsx)(r.code,{children:"GOARCH=amd64 GOOS=linux"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Retry the build process after applying the appropriate configuration."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"pipeline-failures",children:"Pipeline Failures"}),"\n",(0,t.jsx)(r.p,{children:"If the subrepository push workflow fails:"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["Verify the ",(0,t.jsx)(r.code,{children:"github_pat"})," secret is correctly configured."]}),"\n",(0,t.jsxs)(r.li,{children:["Ensure the ",(0,t.jsx)(r.code,{children:"name"})," and ",(0,t.jsx)(r.code,{children:"repo_type"})," inputs in the workflow are accurate."]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"useful-documentation",children:"Useful Documentation"}),"\n",(0,t.jsx)(r.p,{children:"Here are some useful links to help you understand and work with Terraform\nproviders and the DX Azure provider:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"https://developer.hashicorp.com/terraform/registry/providers/publishing",children:"Publishing Providers to the Terraform Registry"}),":\nOfficial guide for publishing providers to the Terraform Registry."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key",children:"Generating a New GPG Key"}),":\nInstructions for generating a new GPG key for signing commits and releases."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"https://developer.hashicorp.com/terraform/registry/providers/publishing#preparing-and-adding-a-signing-key",children:"Preparing and Adding a Signing Key"}),":\nSteps to prepare and add a GPG signing key for Terraform Registry."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"https://developer.hashicorp.com/terraform/plugin/framework/providers",children:"Terraform Providers"}),":\nDocumentation on creating and managing providers."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"https://developer.hashicorp.com/terraform/plugin/framework/functions",children:"Terraform Functions"}),":\nGuide for implementing custom functions in Terraform providers."]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);